{"version":3,"sources":["Filter.js","Filter.jsx","FilterCheckBox.js","FilterCheckBox.jsx","FilterTypes.js","FilterTypes.jsx","FiltersBlock.js","FiltersBlock.jsx","NodeDescription.js","NodeDescription.jsx","Pagination.js","Pagination.jsx","ResultsCaption.js","ResultsCaption.jsx","SearchModule.js","SearchModule.jsx","SortTable.js","SortTable.jsx","TablePagination.js","TablePagination.jsx","Tag.js","Tag.jsx","TagsBlock.js","TagsBlock.jsx","explore_babel.js","explore_babel.jsx"],"names":["Filter","React","createClass","displayName","getInitialState","addCallback","this","updateFilters","title","props","filters","displayTitle","updateFilterHandler","slug","getSlug","params","state","updateFiltersBatch","handleCollapse","event","target_id","target","getAttribute","selector","target_module","jQuery","hasClass","find","slideUp","removeClass","slideDown","addClass","preventDefault","render","createElement","className","data-attribute","id","onClick","data-target","href","TagsBlock","filter_name","handleUnselection","FiltersBlock","handleSelection","FilterCheckbox","checked","Date","valueOf","count","data-count","type","value","name","onChange","disabled","src","scope","image_dir","htmlFor","_typeof","Symbol","iterator","obj","constructor","prototype","FilterTypes","currentSet","typesArr","key","data","type_set","custom_set","i","push","selected","just_title","split","j","currentType","currentSetData","filters_order","newKey","updatePagination","originalScope","currentFilters","filtersParam","currentPage","reviewedOnly","handleChangeType","target_ob","document","getElementById","alreadyActiveEl","querySelector","join","params_obj","filter_key","filter_obj","activeFilters","filter_status","encodeURIComponent","length","scopeDispatchEvent","setState","k","prev_t","l","trackingData","map","set","filter","item","nmTrackFilter","setFilterSelection","isSelected","e","resetFilters","page","delta","onReviewedOnly","is","_this","listItems","typeData","normalizedTitle","toLowerCase","itemId","linkClass","data-type","filterTypesList","dataInfo","createNodes","closeNodeDetails","showMoreFilters","modal_filters","allRange","all_selected","filterInfo","indexOf","JSON","stringify","styles","cModal","text","buttons","argument","filtersStr","serialize","filtersArr","filtersParse","decodeURIComponent","attr","index","moreButton","NodeDescription","onUpdateData","onResponse","loading","cache","call_url","ajaxCall","ajax","url","done","result","parse","css","display","right","animate","handleClickNode","showNodeDescription","hideTableView","editURL","header_name","aria-hidden","styles_str","company_logo","backgroundImage","header_logo","style","do_not_render","do_not_if_value","follow_order","overviewItems","most_recent_investment","overview_data","social","total_funding","investors_number","investments","investors","investments_info","companies","most_recent_date","investor","Number","fund","amount","date","date_arr","investment_date","do_render","not_render_key","key_str","content_str","do_add","content_arr","itemInfo","all_external","all_external_links","external_link_str","getFormattedDate","url_str","twitter_user","network","content","social_items","overview_data_sort","order_index","overview_data_index","splice","column_a","column_b","funding_tab_content","funding_tab","investor_label","fund_date_str","fund_type","abbrNumberFormat","investors_table","titles","investmentAmount","data-id","data-toggle","body","Pagination","initialState","pagination","total_pages","Math","ceil","total","per_page","onUpdateTimestamp","timestamp","specificPage","number","firstPage","prevPage","nextPage","lastPage","jumpToPage","showing_pages","thousandNotation","pages_number","left_side","right_side_calculation","current_page","right_side_val","concat","right_side","forward_action","data-page","last_page_action","backward_action","first_page_action","to","ResultsCaption","results","investors_count","companies_count","SearchModule","resetSearch","updateNodesType","keywords","getTime","placeholder","val","nmTrackEvent","searchKeyword","clearInterval","search_results","search_tracking_obj","nmTrackSearch","checkNodeInfo","hide","show","showAllNodes","showPreviousSearch","graphShowResults","show_in_graph","showNodes","resultsList","resultsItems","keyword_position","title_str","first_string","substring","second_string","third_string","autoComplete","onFocus","SortTable","statesDef","paginateTable","onSearch","analyzeData","from","jump_to_page","searchResult","nameLowerCase","res","dataArr","types","type_i","graph","nodes","ob","n","funding_total","f","numberLabel","window","innerWidth","sort","param","removeAttr","reviewed_only","latestCallParams","latestCallType","info","newStates","sortColumn","field","a","b","x","y","titlesList","data-field","tabIndex","displaying_data","rowsList","data-index","isMobile","any","width","TablePagination","total_str","Tag","handleClick","data-value","data-name","already_rendered","command","do_return","arguments","undefined","callbacks","callback","not_set_slug","s","node","zoomToNode","camera","history","pushState","ajax_object","root_url","checkSlugNode","time","fadeOut","fadeIn","showGraphZoom","zoom","goTo","ratio","refresh","nodes_ids","add_nodes","edges","forEach","edge","source","ids_arr","hidden","string","replace","number_str","toString","action","call_params","ajax_url","num","toFixed","date_str","format","monthNamesAbbr","monthNames","funded_date","renderNodesWithSigma","clearTimeout","sTimeout","setTimeout","clear","kill","html","dataType","sigma","container","settings","defaultLabelSize","labelSizeRatio","labelThreshold","webglOversamplingRatio","borderSize","minArrowSize","singleHover","scalingMode","zoomMax","zoomMin","minEdgeSize","maxEdgeSize","edgeHoverSizeRatio","edgeHoverExtremities","minNodeSize","maxNodeSize","nodesPowRatio","edgesPowRatio","animationsTime","sigmaAddNodesToGraph","company","counts","max_edges","edge_id","t","addEdge","color","bind","id_str","node_id","type_str","startForceAtlas2","linLogMode","adjustSizes","barnesHutTheta","outboundAttractionDistribution","iterationsPerRender","barnesHutOptimize","slowDown","strongGravityMode","scalingRatio","startingIterations","worker","autoStop","background","gravity","stopForceAtlas2","node_type","fail","alert","always","cameras","colors","angle","random","PI","radius","nodeData","label","cos","sin","size","addNode","animation","readPrefix","duration","step","now","updateZoomControl","floor","resetZoom","Android","navigator","userAgent","match","BlackBerry","iOS","Windows","ReactDOM","height"],"mappings":"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","file":"explore.min.js","sourcesContent":["\"use strict\";\n\nvar Filter = React.createClass({\n    displayName: \"Filter\",\n\n    getInitialState: function getInitialState() {\n        addCallback(\"updateFiltersModule\", this.updateFilters);\n\n        return {\n            title: this.props.title,\n            filters: this.props.filters,\n            displayTitle: this.props.displayTitle,\n            updateFilterHandler: this.props.updateFilterHandler,\n            slug: getSlug(this.props.title)\n        };\n    },\n    updateFilters: function updateFilters(params) {\n        if (params.title == this.state.title) {\n            this.props.updateFiltersBatch(this.state.slug, params.filters);\n        }\n    },\n    handleCollapse: function handleCollapse(event) {\n        var target_id = \"module-\" + event.target.getAttribute(\"data-target\");\n\n        var selector = \"collapsed\";\n\n        var target_module = jQuery('#' + target_id);\n        if (target_module.hasClass(selector)) {\n            target_module.find('.filters-content').slideUp();\n            target_module.removeClass(selector);\n        } else {\n            target_module.find('.filters-content').slideDown();\n            target_module.addClass(selector);\n        }\n\n        event.preventDefault();\n    },\n    render: function render() {\n\n        return React.createElement(\n            \"div\",\n            { className: \"sidebar-block selectable-module\", \"data-attribute\": this.state.slug, id: \"module-\" + this.state.slug },\n            React.createElement(\n                \"h3\",\n                { onClick: this.handleCollapse, \"data-target\": this.state.slug },\n                this.state.displayTitle\n            ),\n            React.createElement(\"a\", { href: \"#\", className: \"collapse-block\", \"data-target\": this.state.slug }),\n            React.createElement(TagsBlock, { filters: this.props.filters, filter_name: this.state.title, handleUnselection: this.props.handleUnselection }),\n            React.createElement(FiltersBlock, { filters: this.props.filters, title: this.state.title, filter_name: this.state.title, handleSelection: this.props.handleSelection })\n        );\n    }\n});","var Filter = React.createClass({\n    getInitialState: function () {\n        addCallback(\"updateFiltersModule\", this.updateFilters);\n\n        return {\n            title: this.props.title,\n            filters: this.props.filters,\n            displayTitle:this.props.displayTitle,\n            updateFilterHandler: this.props.updateFilterHandler,\n            slug: getSlug( this.props.title )\n        };\n    },\n    updateFilters: function(params){\n        if(params.title==this.state.title){\n            this.props.updateFiltersBatch(this.state.slug, params.filters);\n        }\n    },\n    handleCollapse: function(event) {\n        var target_id = \"module-\"+event.target.getAttribute(\"data-target\");\n\n        var selector = \"collapsed\";\n\n        var target_module = jQuery('#'+target_id);\n        if(target_module.hasClass(selector)){\n            target_module.find('.filters-content').slideUp();\n            target_module.removeClass(selector);\n        } else {\n            target_module.find('.filters-content').slideDown();\n            target_module.addClass(selector);\n        }\n\n        event.preventDefault();\n    },\n    render: function(){\n\n        return <div className=\"sidebar-block selectable-module\" data-attribute={this.state.slug} id={\"module-\"+this.state.slug}>\n            <h3 onClick={this.handleCollapse} data-target={this.state.slug}>\n                {this.state.displayTitle}\n            </h3>\n            <a href=\"#\" className=\"collapse-block\" data-target={this.state.slug}></a>\n            <TagsBlock filters={this.props.filters} filter_name={this.state.title} handleUnselection={this.props.handleUnselection}/>\n            <FiltersBlock filters={this.props.filters} title={this.state.title} filter_name={this.state.title} handleSelection={this.props.handleSelection} />\n        </div>\n    }\n});\n","'use strict';\n\nvar FilterCheckbox = React.createClass({\n    displayName: 'FilterCheckbox',\n\n    getInitialState: function getInitialState() {\n        return { checked: false };\n    },\n    render: function render() {\n        var slug = getSlug(this.props.title + \" \" + new Date().valueOf());\n        var className = 'filter-item ' + (this.props.count == 0 ? 'no-results' : '');\n        return React.createElement(\n            'div',\n            { className: className, 'data-count': this.props.count },\n            React.createElement('input', { type: 'checkbox', value: this.props.title, name: this.props.filter_name, id: slug, onChange: this.props.handleSelection, disabled: this.props.count == 0 }),\n            React.createElement('img', { src: scope.image_dir + \"checkbox-normal.svg\" }),\n            React.createElement('img', { src: scope.image_dir + \"checkbox-checked.svg\" }),\n            React.createElement(\n                'label',\n                { htmlFor: slug },\n                this.props.title\n            )\n        );\n    }\n\n});","var FilterCheckbox = React.createClass({\n    getInitialState: function () {\n        return { checked: false };\n    },\n    render: function(){\n        var slug = getSlug( this.props.title+\" \"+new Date().valueOf() );\n        var className = 'filter-item '+(this.props.count==0 ? 'no-results' : '');\n        return  <div className={className} data-count={this.props.count}>\n            <input type=\"checkbox\" value={this.props.title} name={this.props.filter_name} id={slug} onChange={this.props.handleSelection} disabled={this.props.count==0}/>\n            <img src={scope.image_dir + \"checkbox-normal.svg\"} />\n            <img src={scope.image_dir + \"checkbox-checked.svg\"} />\n            <label htmlFor={slug}>{this.props.title}</label>\n        </div>\n    }\n\n});","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/* ****************************************\n   *** TYPE SELECTOR (company, investor)\n   ****************************************\n*/\n\nvar FilterTypes = React.createClass({\n    displayName: 'FilterTypes',\n\n    getInitialState: function getInitialState() {\n        var typesArr = [];\n        var currentSet;\n\n        for (var key in this.props.scope.data) {\n            var type_set = this.props.scope.data[key];\n            var custom_set = {};\n\n            for (var filter_name in type_set) {\n                var filters = [];\n                for (var i in type_set[filter_name]) {\n                    if (typeof type_set[filter_name][i] == 'string') {\n                        filters.push({\n                            title: type_set[filter_name][i],\n                            selected: false,\n                            just_title: false,\n                            count: i.split('-')[1]\n                        });\n                    } else if (_typeof(type_set[filter_name][i]) == 'object') {\n                        filters.push({ title: i, selected: false, just_title: true });\n                        for (var j in type_set[filter_name][i]) {\n                            filters.push({\n                                title: type_set[filter_name][i][j],\n                                selected: false,\n                                just_title: false,\n                                count: j.split('-')[1]\n                            });\n                        }\n                    }\n                }\n                custom_set[filter_name] = filters;\n            }\n            typesArr.push({ title: key, data: custom_set });\n        }\n\n        for (var i in typesArr) {\n            if (typesArr[i].title == this.props.scope.currentType) {\n                currentSet = typesArr[i].data;\n                break;\n            }\n        }\n        var currentSetData = [];\n        var filters_order = [\"impact objective\", \"industry\", \"geography\", \"fundraising round\", \"legal structure\", \"certifications\", \"investor type\", \"mechanism\", \"vehicle\"];\n        for (var i in filters_order) {\n            for (var key in currentSet) {\n\n                var newKey;\n                switch (key) {\n                    case \"industries\":\n                        newKey = \"industry\";\n                        break;\n                    case \"legal structures\":\n                        newKey = \"legal structure\";\n                        break;\n                    case \"funding round\":\n                        newKey = \"fundraising round\";\n                        break;\n                    default:\n                        newKey = key;\n                        break;\n                }\n                if (filters_order[i] == newKey) {\n                    currentSetData.push({ title: key, displayTitle: newKey, data: currentSet[key] });\n                }\n            }\n        }\n\n        addCallback(\"updatePagination\", this.updatePagination);\n\n        return {\n            data: typesArr,\n            currentType: this.props.scope.currentType,\n            currentSet: currentSetData,\n            originalScope: this.props.scope,\n            currentFilters: [],\n            filtersParam: [],\n            currentPage: 1,\n            reviewedOnly: false\n        };\n    },\n    handleChangeType: function handleChangeType(event) {\n\n        var target_id = event.target.getAttribute(\"data-target\");\n        var target_ob = document.getElementById(target_id);\n        var selector = \"active-type\";\n        var type = target_ob.getAttribute(\"data-type\");\n\n        // REMOVE ACTIVE CLASS FROM ALREADY ACTIVE ELEMENT\n        var alreadyActiveEl = document.querySelector(\"a.\" + selector);\n\n        if (alreadyActiveEl) {\n            alreadyActiveEl.className = alreadyActiveEl.className.split(selector).join('');\n        }\n\n        // ADD ACTIVE CLASS TO CURRENT ITEM\n        target_ob.className += \" \" + selector;\n\n        var currentSet;\n        for (var i in this.state.data) {\n            if (type == this.state.data[i].title) {\n                currentSet = this.state.data[i].data;\n                break;\n            }\n        }\n        var currentSetData = [];\n        var filters_order = [\"impact objective\", \"investor type\", \"industry\", \"geography\", \"fundraising round\", \"legal structure\", \"certifications\", \"investor type\", \"mechanism\", \"vehicle\"];\n        for (var i in filters_order) {\n            for (var key in currentSet) {\n\n                var newKey;\n                switch (key) {\n                    case \"industries\":\n                        newKey = \"industry\";\n                        break;\n                    case \"legal structures\":\n                        newKey = \"legal structure\";\n                        break;\n                    case \"funding round\":\n                        newKey = \"fundraising round\";\n                        break;\n                    default:\n                        newKey = key;\n                        break;\n                }\n                if (filters_order[i] == newKey) {\n                    currentSetData.push({ title: key, displayTitle: newKey, data: currentSet[key] });\n                }\n            }\n        }\n\n        var params_obj = {};\n        for (var filter_key in currentSetData) {\n            var filter_obj = currentSetData[filter_key];\n            var activeFilters = [];\n            for (var i in currentSetData[filter_key].data) {\n                var filter_status = currentSetData[filter_key].data[i];\n                if (filter_status.selected && !filter_status.just_title) {\n                    activeFilters.push(encodeURIComponent(filter_status.title));\n                }\n            }\n\n            if (activeFilters.length > 0) {\n                params_obj[getSlug(filter_obj.title)] = activeFilters.join(\"[][]\");\n            }\n        }\n\n        this.state.originalScope.currentType = type;\n\n        scopeDispatchEvent('updateNodesType', type);\n\n        this.setState({\n            data: this.state.data,\n            currentType: type,\n            currentSet: currentSetData,\n            originalScope: this.state.originalScope,\n            currentFilters: [],\n            filtersParam: params_obj,\n            currentPage: 1\n        });\n\n        event.preventDefault();\n    },\n    updateFiltersBatch: function updateFiltersBatch(name, filters) {\n        for (var i in this.state.currentSet) {\n            if (getSlug(this.state.currentSet[i].title) == name) {\n                for (var k in filters) {\n                    for (var j in this.state.currentSet[i].data) {\n                        if (this.state.currentSet[i].data[j].title == filters[k]) {\n                            this.state.currentSet[i].data[j].selected = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        this.updateFilterHandler();\n    },\n    updateFilterHandler: function updateFilterHandler() {\n        var params_obj = {};\n        var prev_t = '-- first';\n\n        for (var filter_key in this.state.currentSet) {\n            var filter_obj = this.state.currentSet[filter_key];\n            var activeFilters = [];\n            for (var i in this.state.currentSet[filter_key].data) {\n                var filter_status = this.state.currentSet[filter_key].data[i];\n                if (filter_status.selected && !filter_status.just_title) {\n\n                    activeFilters.push(encodeURIComponent(filter_status.title));\n                }\n                prev_t = filter_status.title;\n            }\n\n            if (activeFilters.length > 0) {\n                params_obj[getSlug(filter_obj.title)] = activeFilters.join(\"[][]\");\n            }\n        }\n\n        for (var filter_key in this.state.currentSet) {\n            var filter_obj = this.state.currentSet[filter_key];\n            for (var i in this.state.currentSet[filter_key].data) {\n                var filter_status = this.state.currentSet[filter_key].data[i];\n\n                for (var j in this.state.data) {\n                    for (var k in this.state.data[j].data) {\n                        if (k == filter_obj.title) {\n                            for (var l in this.state.data[j].data[k]) {\n                                if (this.state.data[j].data[k][l].title == filter_status.title) {\n                                    this.state.data[j].data[k][l].selected = filter_status.selected;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        this.setState({\n            currentSet: this.state.currentSet,\n            currentFilters: this.state.currentFilters,\n            filtersParam: params_obj,\n            currentPage: 1\n        });\n\n        var trackingData = this.state.currentSet.map(function (set) {\n            return {\n                'title': set.title,\n                'selected': set.data.filter(function (item) {\n                    return item.selected;\n                }).map(function (item) {\n                    return item.title;\n                })\n            };\n        });\n        nmTrackFilter(trackingData);\n    },\n    setFilterSelection: function setFilterSelection(name, value, isSelected) {\n\n        for (var i in this.state.currentSet) {\n            if (this.state.currentSet[i].title == name) {\n                for (var j in this.state.currentSet[i].data) {\n                    if (this.state.currentSet[i].data[j].title == value) {\n                        this.state.currentSet[i].data[j].selected = isSelected;\n                    }\n                }\n            }\n        }\n    },\n    handleUnselection: function handleUnselection(e) {\n        this.setFilterSelection(e.target.getAttribute(\"data-name\"), e.target.getAttribute(\"data-value\"), false);\n        this.updateFilterHandler();\n        e.preventDefault();\n    },\n\n    handleSelection: function handleSelection(e) {\n        this.setFilterSelection(e.target.name, e.target.value, true);\n        this.updateFilterHandler();\n        e.preventDefault();\n    },\n    resetFilters: function resetFilters(e) {\n\n        for (var i in this.state.currentSet) {\n            for (var j in this.state.currentSet[i].data) {\n                if (this.state.currentSet[i].data[j].selected && !this.state.currentSet[i].data[j].just_title) {\n                    this.state.currentSet[i].data[j].selected = false;\n                }\n            }\n        }\n        for (var i in this.state.data) {\n            for (var j in this.state.data[i].data) {\n                for (var k in this.state.data[i].data[j]) {\n                    this.state.data[i].data[j][k].selected = false;\n                }\n            }\n        }\n\n        this.setState({\n            data: this.state.data,\n            currentFilters: this.state.currentFilters,\n            filtersParam: [],\n            currentPage: 1\n        });\n\n        e.preventDefault();\n    },\n    updatePagination: function updatePagination(params) {\n        if (typeof params.page != 'undefined') {\n            if (this.state.currentPage != params.page) {\n                this.setState({\n                    currentFilters: this.state.currentFilters,\n                    filtersParam: this.state.filtersParam,\n                    currentPage: params.page\n                });\n            }\n        } else {\n            var delta = params.delta;\n            if (this.state.currentPage + delta > 0) {\n                this.setState({\n                    currentFilters: this.state.currentFilters,\n                    filtersParam: this.state.filtersParam,\n                    currentPage: this.state.currentPage + delta\n                });\n            }\n        }\n    },\n    onReviewedOnly: function onReviewedOnly() {\n        this.setState({ reviewedOnly: jQuery('#reviewed_only').is(':checked') });\n    },\n    render: function render() {\n        var _this = this;\n\n        var listItems = this.state.data.map(function (typeData) {\n            var normalizedTitle = typeData.title.toLowerCase();\n            var className = \"type-icon icon-\" + normalizedTitle;\n            var itemId = \"filter-type-\" + normalizedTitle;\n            var linkClass = _this.state.currentType == typeData.title ? \"active-type\" : \"\";\n\n            return React.createElement(\n                'li',\n                { key: typeData.title },\n                React.createElement(\n                    'a',\n                    { href: '#', onClick: _this.handleChangeType, id: itemId, 'data-target': itemId, className: linkClass, 'data-type': typeData.title },\n                    React.createElement('span', { className: className, 'data-target': itemId }),\n                    React.createElement(\n                        'span',\n                        { className: 'type-label', 'data-target': itemId },\n                        typeData.title\n                    )\n                )\n            );\n        });\n\n        var filterTypesList = this.state.currentSet.map(function (dataInfo) {\n            return dataInfo.data.length > 0 || typeof dataInfo.data.length == 'undefined' ? React.createElement(Filter, { title: dataInfo.title, filters: dataInfo.data, displayTitle: dataInfo.displayTitle, key: dataInfo.title, handleSelection: _this.handleSelection, handleUnselection: _this.handleUnselection, updateFiltersBatch: _this.updateFiltersBatch }) : \"\";\n        });\n\n        createNodes(this.state.currentType, this.state.filtersParam, this.state.reviewedOnly, this.state.currentPage);\n\n        scopeDispatchEvent(\"updateTableView\", {\n            type: this.state.currentType,\n            filtersParam: this.state.filtersParam,\n            reviewedOnly: this.state.reviewedOnly,\n            currentPage: this.state.currentPage\n        });\n\n        closeNodeDetails();\n\n        return React.createElement(\n            'div',\n            null,\n            React.createElement(\n                'div',\n                { className: 'sidebar-block title-block' },\n                React.createElement(\n                    'h3',\n                    null,\n                    'Filter by'\n                )\n            ),\n            React.createElement(\n                'div',\n                { className: 'sidebar-block' },\n                React.createElement(\n                    'h3',\n                    null,\n                    this.props.title,\n                    ':'\n                ),\n                React.createElement(\n                    'div',\n                    { className: 'type-filters' },\n                    React.createElement(\n                        'ul',\n                        null,\n                        listItems\n                    )\n                )\n            ),\n            React.createElement(\n                'div',\n                { className: 'sidebar-block' },\n                React.createElement(\n                    'div',\n                    { className: 'filter-item big-check' },\n                    React.createElement('input', { type: 'checkbox', value: 'reviewed', id: 'reviewed_only', onChange: this.onReviewedOnly }),\n                    React.createElement('img', { src: scope.image_dir + \"big_checkbox.svg\" }),\n                    React.createElement('img', { src: scope.image_dir + \"big_checkbox_checked.svg\" }),\n                    React.createElement(\n                        'label',\n                        { htmlFor: 'reviewed_only' },\n                        'Show reviewed information only ',\n                        React.createElement(\n                            'span',\n                            { className: 'tooltip', title: 'Check this box to view information which has been reviewed and confirmed by our data partner, Impact Space. While Impact Space data is crowdsourced, Impact Space is continuously working to improve the quality of their information.' },\n                            'i'\n                        )\n                    )\n                )\n            ),\n            filterTypesList,\n            React.createElement(\n                'div',\n                { className: 'sidebar-block buttons-block' },\n                React.createElement(\n                    'a',\n                    { href: '#', className: 'primary-btn btn-border reset-filters-btn', onClick: this.resetFilters },\n                    'Reset Filters'\n                )\n            )\n        );\n    }\n});","/* ****************************************\n   *** TYPE SELECTOR (company, investor)\n   ****************************************\n*/\n\nvar FilterTypes = React.createClass({\n    getInitialState: function () {\n        var typesArr = [];\n        var currentSet;\n\n        for (var key in this.props.scope.data) {\n            var type_set = this.props.scope.data[key];\n            var custom_set = {};\n\n            for (var filter_name in type_set) {\n                var filters = [];\n                for (var i in type_set[filter_name]) {\n                    if (typeof type_set[filter_name][i] == 'string') {\n                        filters.push({\n                            title: type_set[filter_name][i],\n                            selected: false,\n                            just_title: false,\n                            count: i.split('-')[1]\n                        });\n                    } else if (typeof type_set[filter_name][i] == 'object') {\n                        filters.push({title: i, selected: false, just_title: true});\n                        for (var j in type_set[filter_name][i]) {\n                            filters.push({\n                                title: type_set[filter_name][i][j],\n                                selected: false,\n                                just_title: false,\n                                count: j.split('-')[1]\n                            });\n                        }\n                    }\n                }\n                custom_set[filter_name] = filters;\n            }\n            typesArr.push({title: key, data: custom_set});\n        }\n\n        for (var i in typesArr) {\n            if (typesArr[i].title == this.props.scope.currentType) {\n                currentSet = typesArr[i].data;\n                break;\n            }\n        }\n        var currentSetData = [];\n        var filters_order = [\"impact objective\", \"industry\", \"geography\", \"fundraising round\", \"legal structure\", \"certifications\", \"investor type\", \"mechanism\", \"vehicle\"];\n        for (var i in filters_order) {\n            for (var key in currentSet) {\n\n                    var newKey;\n                    switch (key) {\n                        case \"industries\":\n                            newKey = \"industry\";\n                            break;\n                        case \"legal structures\":\n                            newKey = \"legal structure\";\n                            break;\n                        case \"funding round\":\n                            newKey = \"fundraising round\";\n                            break;\n                        default:\n                            newKey = key;\n                            break;\n                    }\n                if(filters_order[i]==newKey) {\n                    currentSetData.push({title: key, displayTitle:newKey, data: currentSet[key]});\n                }\n            }\n        }\n\n        addCallback(\"updatePagination\", this.updatePagination);\n\n        return {\n            data: typesArr,\n            currentType:this.props.scope.currentType,\n            currentSet: currentSetData,\n            originalScope: this.props.scope,\n            currentFilters: [],\n            filtersParam: [],\n            currentPage:1,\n            reviewedOnly: false\n        };\n    },\n    handleChangeType: function(event){\n\n        var target_id = event.target.getAttribute(\"data-target\");\n        var target_ob = document.getElementById(target_id);\n        var selector = \"active-type\";\n        var type = target_ob.getAttribute(\"data-type\");\n\n        // REMOVE ACTIVE CLASS FROM ALREADY ACTIVE ELEMENT\n        var alreadyActiveEl = document.querySelector(\"a.\"+selector);\n\n        if(alreadyActiveEl){\n            alreadyActiveEl.className = alreadyActiveEl.className.split(selector).join('');\n        }\n\n        // ADD ACTIVE CLASS TO CURRENT ITEM\n        target_ob.className += \" \"+selector;\n\n        var currentSet;\n        for(var i in this.state.data){\n            if(type==this.state.data[i].title){\n                currentSet = this.state.data[i].data;\n                break;\n            }\n        }\n        var currentSetData = [];\n        var filters_order = [\"impact objective\", \"investor type\", \"industry\", \"geography\", \"fundraising round\", \"legal structure\", \"certifications\", \"investor type\", \"mechanism\", \"vehicle\"];\n        for (var i in filters_order) {\n            for (var key in currentSet) {\n\n                var newKey;\n                switch (key) {\n                    case \"industries\":\n                        newKey = \"industry\";\n                        break;\n                    case \"legal structures\":\n                        newKey = \"legal structure\";\n                        break;\n                    case \"funding round\":\n                        newKey = \"fundraising round\";\n                        break;\n                    default:\n                        newKey = key;\n                        break;\n                }\n                if(filters_order[i]==newKey) {\n                    currentSetData.push({title: key, displayTitle:newKey, data: currentSet[key]});\n                }\n            }\n        }\n\n        var params_obj = {};\n        for(var filter_key in currentSetData){\n            var filter_obj = currentSetData[filter_key];\n            var activeFilters = [];\n            for( var i in currentSetData[filter_key].data){\n                var filter_status = currentSetData[filter_key].data[i];\n                if(filter_status.selected && !filter_status.just_title){\n                    activeFilters.push(encodeURIComponent(filter_status.title));\n                }\n            }\n\n            if(activeFilters.length>0){\n                params_obj[getSlug(filter_obj.title)] = activeFilters.join(\"[][]\");\n            }\n        }\n\n\n        this.state.originalScope.currentType = type;\n\n        scopeDispatchEvent('updateNodesType', type);\n\n        this.setState({\n            data: this.state.data,\n            currentType: type,\n            currentSet: currentSetData,\n            originalScope: this.state.originalScope,\n            currentFilters: [],\n            filtersParam: params_obj,\n            currentPage:1,\n        });\n\n        event.preventDefault();\n    },\n    updateFiltersBatch: function(name, filters){\n        for(var i in this.state.currentSet){\n            if(getSlug(this.state.currentSet[i].title)==name){\n                for(var k in filters){\n                    for(var j in this.state.currentSet[i].data){\n                        if(this.state.currentSet[i].data[j].title == filters[k]){\n                            this.state.currentSet[i].data[j].selected = true;\n                            break;\n                        }\n                    }\n                }\n\n            }\n        }\n\n        this.updateFilterHandler();\n    },\n    updateFilterHandler: function(){\n        var params_obj = {};\n        var prev_t = '-- first';\n\n        for(var filter_key in this.state.currentSet){\n            var filter_obj = this.state.currentSet[filter_key];\n            var activeFilters = [];\n            for( var i in this.state.currentSet[filter_key].data){\n                var filter_status = this.state.currentSet[filter_key].data[i];\n                if(filter_status.selected && !filter_status.just_title){\n\n                    activeFilters.push(encodeURIComponent(filter_status.title));\n                }\n                prev_t = filter_status.title;\n            }\n\n            if(activeFilters.length>0){\n                params_obj[getSlug(filter_obj.title)] = activeFilters.join(\"[][]\");\n            }\n        }\n\n        for(var filter_key in this.state.currentSet) {\n            var filter_obj = this.state.currentSet[filter_key];\n            for (var i in this.state.currentSet[filter_key].data) {\n                var filter_status = this.state.currentSet[filter_key].data[i];\n\n\n                for(var j in this.state.data){\n                    for(var k in this.state.data[j].data){\n                        if(k==filter_obj.title){\n                            for(var l in this.state.data[j].data[k]){\n                                if(this.state.data[j].data[k][l].title == filter_status.title) {\n                                    this.state.data[j].data[k][l].selected = filter_status.selected;\n                                }\n                            }\n                        }\n                    }\n                }\n\n            }\n        }\n\n        this.setState({\n            currentSet: this.state.currentSet,\n            currentFilters: this.state.currentFilters,\n            filtersParam: params_obj,\n            currentPage:1\n        });\n\n        var trackingData = this.state.currentSet.map(function(set) {\n          return {\n            'title': set.title,\n            'selected': set.data.filter(function(item) {\n              return item.selected;\n            }).map(function(item) {\n              return item.title\n            })\n          }\n        })\n        nmTrackFilter(trackingData)\n    },\n    setFilterSelection: function(name, value, isSelected){\n\n        for(var i in this.state.currentSet){\n            if(this.state.currentSet[i].title == name ) {\n                for(var j in this.state.currentSet[i].data){\n                    if(this.state.currentSet[i].data[j].title == value ) {\n                        this.state.currentSet[i].data[j].selected = isSelected;\n                    }\n                }\n            }\n        }\n    },\n    handleUnselection: function(e){\n        this.setFilterSelection(e.target.getAttribute(\"data-name\"), e.target.getAttribute(\"data-value\"), false);\n        this.updateFilterHandler();\n        e.preventDefault();\n    },\n\n    handleSelection: function(e){\n        this.setFilterSelection(e.target.name, e.target.value, true);\n        this.updateFilterHandler();\n        e.preventDefault();\n    },\n    resetFilters: function(e){\n\n        for(var i in this.state.currentSet){\n            for(var j in this.state.currentSet[i].data){\n                if(this.state.currentSet[i].data[j].selected && !this.state.currentSet[i].data[j].just_title){\n                    this.state.currentSet[i].data[j].selected = false;\n                }\n            }\n        }\n        for(var i in this.state.data){\n            for(var j in this.state.data[i].data){\n                for(var k in this.state.data[i].data[j]){\n                    this.state.data[i].data[j][k].selected = false;\n                }\n            }\n        }\n\n        this.setState({\n            data: this.state.data,\n            currentFilters: this.state.currentFilters,\n            filtersParam: [],\n            currentPage:1\n        });\n\n        e.preventDefault();\n    },\n    updatePagination: function(params){\n        if(typeof params.page != 'undefined'){\n            if(this.state.currentPage!=params.page){\n                this.setState({\n                        currentFilters: this.state.currentFilters,\n                        filtersParam: this.state.filtersParam,\n                        currentPage:params.page\n                });\n            }\n        } else {\n            var delta = params.delta;\n            if(this.state.currentPage+delta > 0){\n                this.setState({\n                    currentFilters: this.state.currentFilters,\n                    filtersParam: this.state.filtersParam,\n                    currentPage:this.state.currentPage+delta\n                });\n            }\n        }\n    },\n    onReviewedOnly: function(){\n        this.setState({reviewedOnly: jQuery('#reviewed_only').is(':checked')});\n    },\n    render: function(){\n        var listItems = this.state.data.map((typeData) => {\n            var normalizedTitle = typeData.title.toLowerCase();\n            var className = \"type-icon icon-\"+normalizedTitle;\n            var itemId = \"filter-type-\"+normalizedTitle;\n            var linkClass = this.state.currentType == typeData.title ? \"active-type\" : \"\";\n\n\n            return (\n                    <li key={typeData.title}>\n                        <a href=\"#\" onClick={this.handleChangeType} id={itemId} data-target={itemId} className={linkClass} data-type={typeData.title}>\n                            <span className={className} data-target={itemId}></span>\n                            <span className=\"type-label\" data-target={itemId}>{typeData.title}</span>\n                        </a>\n                    </li>\n                )\n            }\n        );\n        \n        var filterTypesList =  this.state.currentSet.map((dataInfo) => {\n                return (\n                    (dataInfo.data.length>0 || (typeof dataInfo.data.length == 'undefined') ) ? <Filter title={dataInfo.title} filters={dataInfo.data} displayTitle={dataInfo.displayTitle} key={dataInfo.title} handleSelection={this.handleSelection} handleUnselection={this.handleUnselection} updateFiltersBatch={this.updateFiltersBatch}/> : \"\"\n                )\n            }\n        );\n\n        createNodes(this.state.currentType, this.state.filtersParam, this.state.reviewedOnly, this.state.currentPage);\n\n        scopeDispatchEvent(\"updateTableView\", {\n            type:this.state.currentType,\n            filtersParam: this.state.filtersParam,\n            reviewedOnly: this.state.reviewedOnly,\n            currentPage:this.state.currentPage,\n        });\n\n        closeNodeDetails();\n\n\n        return (\n            <div>\n                <div className=\"sidebar-block title-block\">\n                    <h3>Filter by</h3>\n                </div>\n                <div className=\"sidebar-block\">\n                    <h3>{this.props.title}:</h3>\n                    <div className=\"type-filters\">\n                        <ul>\n                            {listItems}\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"sidebar-block\">\n                    <div className=\"filter-item big-check\">\n                        <input type=\"checkbox\" value=\"reviewed\" id=\"reviewed_only\" onChange={this.onReviewedOnly}/>\n                        <img src={scope.image_dir + \"big_checkbox.svg\"} />\n                        <img src={scope.image_dir + \"big_checkbox_checked.svg\"} />\n                        <label htmlFor=\"reviewed_only\">Show reviewed information only <span className=\"tooltip\" title=\"Check this box to view information which has been reviewed and confirmed by our data partner, Impact Space. While Impact Space data is crowdsourced, Impact Space is continuously working to improve the quality of their information.\">i</span></label>\n\n                    </div>\n                </div>\n                {filterTypesList}\n                <div className=\"sidebar-block buttons-block\">\n                    <a href=\"#\" className=\"primary-btn btn-border reset-filters-btn\" onClick={this.resetFilters}>Reset Filters</a>\n                </div>\n\n            </div>\n        )\n    }\n});\n","\"use strict\";\n\nvar FiltersBlock = React.createClass({\n    displayName: \"FiltersBlock\",\n\n    getInitialState: function getInitialState() {\n        return {\n            title: this.props.title,\n            handleSelection: this.props.handleSelection\n        };\n    },\n    showMoreFilters: function showMoreFilters(e) {\n        var modal_filters = \"\";\n        var allRange = false; // INDICATES IF ARRAY IS OR NOT IN THE \"ALL SECTION\"\n        var all_selected = \"\";\n\n        for (var i in this.props.filters) {\n            var filterInfo = this.props.filters[i];\n            var slug = getSlug(filterInfo.title + \" popup \" + new Date().valueOf());\n\n            // SET ALL RANGE\n            if (filterInfo.just_title && filterInfo.title == \"all\") {\n                allRange = true;\n            } else if (filterInfo.just_title && filterInfo.title != \"all\") {\n                allRange = false;\n            }\n\n            if (!allRange) {\n\n                if (all_selected.indexOf(filterInfo.title + '[][][]') != -1) {\n                    filterInfo.selected = true;\n                }\n\n                var checked = '';\n                if (filterInfo.selected) {\n                    checked = \" checked \";\n                }\n\n                var className = 'filter-item ' + (filterInfo.count == 0 ? 'no-results' : '');\n                if (!filterInfo.just_title) {\n                    modal_filters += '<li json=\"' + JSON.stringify(filterInfo) + '\">' + '<div class=\"filter-item ' + className + '\" data-count=\"' + filterInfo.count + '\">' + '<input type=\"checkbox\" value=\"' + filterInfo.title + '\" name=\"' + this.state.title + '\" id=\"' + slug + '\" ' + checked + ' ' + (filterInfo.count == 0 ? 'disabled=\"true\"' : '') + '/>' + '<img src=\"' + scope.image_dir + 'big_checkbox.svg\"/>' + '<img src=\"' + scope.image_dir + 'big_checkbox_checked.svg\"/>' + '<label for=\"' + slug + '\">' + filterInfo.title + '</label>' + '</div>' + '</li>';\n                } else {\n                    modal_filters += '<li>' + '<h4>' + filterInfo.title + '</h4>' + '</li>';\n                }\n            } else {\n\n                if (filterInfo.selected) {\n                    all_selected += filterInfo.title + '[][][]';\n                }\n            }\n        }\n\n        var styles = \"\";\n        if (this.state.title == 'impact objective') {\n            styles = \"column-count: 2;\";\n        } else if (this.state.title == 'legal structures') {\n            styles = \"column-count: 2;\";\n        } else if (this.state.title == 'industries') {\n            styles = \"column-count: 2;\";\n        } else if (this.state.title == \"geography\") {\n            styles = \"column-count: 4;\";\n        }\n        modal_filters = \"<form id=\\\"modal-filters\\\" data-callback=\\\"\" + this.state.title + \"\\\"><ul class=\\\"modal-filters\\\" style=\\\"\" + styles + \"\\\">\" + modal_filters + \"</ul></form>\";\n\n        jQuery.cModal({\n            type: 'default',\n            title: this.state.title + ':',\n            text: modal_filters,\n            buttons: [{\n                text: 'Add',\n                onClick: function onClick(argument) {\n                    var filtersStr = jQuery('#modal-filters').serialize();\n                    var filtersArr = filtersStr.split('&');\n\n                    var filters = [];\n                    for (var i in filtersArr) {\n                        var filtersParse = filtersArr[i].split('=');\n                        filters.push(decodeURIComponent(filtersParse[1]).split('+').join(\" \"));\n                    }\n\n                    scopeDispatchEvent(\"updateFiltersModule\", { title: jQuery('#modal-filters').attr('data-callback'), filters: filters });\n                    return true;\n                }\n            }]\n        });\n        e.preventDefault();\n    },\n    render: function render() {\n        var _this = this;\n\n        var listItems = this.props.filters.map(function (filterInfo, index) {\n            return !filterInfo.selected && !filterInfo.just_title && index < 8 ? React.createElement(FilterCheckbox, { title: filterInfo.title, filter_name: _this.props.filter_name, count: filterInfo.count, key: filterInfo.title, handleSelection: _this.state.handleSelection }) : filterInfo.just_title ? \"\" : \"\";\n        });\n        var moreButton = \"\";\n\n        if (this.props.filters.length > 8) {\n            moreButton = React.createElement(\n                \"a\",\n                { href: \"#\", onClick: this.showMoreFilters },\n                \"more +\"\n            );\n        }\n\n        return React.createElement(\n            \"div\",\n            { className: \"filters-content\" },\n            React.createElement(\n                \"form\",\n                null,\n                listItems,\n                moreButton\n            )\n        );\n    }\n});","var FiltersBlock = React.createClass({\n    getInitialState: function () {\n        return {\n            title: this.props.title,\n            handleSelection: this.props.handleSelection,\n        };\n    },\n    showMoreFilters: function(e){\n        var modal_filters = \"\";\n        var allRange = false; // INDICATES IF ARRAY IS OR NOT IN THE \"ALL SECTION\"\n        var all_selected = \"\";\n\n        for(var i in this.props.filters){\n            var filterInfo = this.props.filters[i];\n            var slug = getSlug( filterInfo.title+\" popup \"+new Date().valueOf() );\n\n            // SET ALL RANGE\n            if( filterInfo.just_title && filterInfo.title == \"all\" ){\n                allRange = true;\n            }   else if(filterInfo.just_title && filterInfo.title != \"all\"){\n                allRange = false;\n            }\n\n                if (!allRange) {\n\n                    if( (all_selected).indexOf(filterInfo.title+'[][][]')!=-1){\n                        filterInfo.selected = true;\n                    }\n\n                    var checked = '';\n                    if(filterInfo.selected) {\n                        checked = \" checked \";\n                    }\n\n                    var className = 'filter-item ' + (filterInfo.count == 0 ? 'no-results' : '');\n                    if (!filterInfo.just_title) {\n                        modal_filters += '<li json=\"' + JSON.stringify(filterInfo) + '\">' +\n                            '<div class=\"filter-item ' + className + '\" data-count=\"' + filterInfo.count + '\">' +\n                            '<input type=\"checkbox\" value=\"' + filterInfo.title + '\" name=\"' + this.state.title + '\" id=\"' + slug + '\" ' + checked + ' ' + (filterInfo.count == 0 ? 'disabled=\"true\"' : '') + '/>' +\n                            '<img src=\"' + scope.image_dir + 'big_checkbox.svg\"/>' +\n                            '<img src=\"' + scope.image_dir + 'big_checkbox_checked.svg\"/>' +\n                            '<label for=\"' + slug + '\">' + filterInfo.title + '</label>' +\n                            '</div>' +\n                            '</li>';\n                    } else {\n                        modal_filters += '<li>' +\n                            '<h4>' + filterInfo.title + '</h4>' +\n                            '</li>';\n                    }\n                } else {\n\n                    if(filterInfo.selected){\n                        all_selected+=filterInfo.title+'[][][]';\n                    }\n\n                }\n\n        }\n\n\n        var styles = \"\";\n        if(this.state.title=='impact objective'){\n            styles = \"column-count: 2;\";\n        }else if(this.state.title=='legal structures'){\n            styles = \"column-count: 2;\";\n        }else if(this.state.title=='industries'){\n            styles = \"column-count: 2;\";\n        }else if(this.state.title==\"geography\"){\n            styles = \"column-count: 4;\";\n        }\n        modal_filters = \"<form id=\\\"modal-filters\\\" data-callback=\\\"\"+this.state.title+\"\\\"><ul class=\\\"modal-filters\\\" style=\\\"\"+styles+\"\\\">\"+modal_filters+\"</ul></form>\";\n\n        jQuery.cModal({\n            type: 'default',\n            title: this.state.title+':',\n            text: modal_filters,\n            buttons: [{\n                    text: 'Add',\n                    onClick: function(argument) {\n                        var filtersStr = jQuery('#modal-filters').serialize();\n                        var filtersArr = filtersStr.split('&');\n\n                        var filters= [];\n                        for(var i in filtersArr){\n                            var filtersParse = filtersArr[i].split('=');\n                            filters.push(decodeURIComponent(filtersParse[1]).split('+').join(\" \"));\n                        }\n\n                        scopeDispatchEvent(\"updateFiltersModule\",{title:jQuery('#modal-filters').attr('data-callback'), filters:filters});\n                        return true;\n                    }\n                },\n            ],\n        });\n        e.preventDefault();\n    },\n    render: function(){\n        var listItems = this.props.filters.map((filterInfo, index) => {\n            return (\n                !filterInfo.selected && !filterInfo.just_title && index<8 ? <FilterCheckbox title={filterInfo.title} filter_name={this.props.filter_name} count={filterInfo.count} key={filterInfo.title} handleSelection={this.state.handleSelection}/> : (filterInfo.just_title ? \"\" : \"\")\n            )\n        });\n        var moreButton = \"\";\n\n        if(this.props.filters.length>8){\n            moreButton = <a href=\"#\" onClick={this.showMoreFilters}>more +</a>;\n        }\n\n        return  <div className=\"filters-content\">\n                    <form>\n                        {listItems}\n                        {moreButton}\n                    </form>\n                </div>\n        }\n});\n","\"use strict\";\n\nvar NodeDescription = React.createClass({\n    displayName: \"NodeDescription\",\n\n    getInitialState: function getInitialState() {\n        addCallback(\"checkNodeInfo\", this.onUpdateData);\n        addCallback(\"onNodeDescriptionResponse\", this.onResponse);\n        return { loading: true };\n    },\n    onUpdateData: function onUpdateData(params) {\n        if (typeof scope.cache[params.type + '_' + params.id] == 'undefined') {\n\n            var call_url = ajaxCall(\"get_node\", { type: params.type, id: params.id });\n\n            this.setState({ loading: true, type: params.type });\n\n            jQuery.ajax({ url: call_url }).done(function (result) {\n                scopeDispatchEvent(\"onNodeDescriptionResponse\", JSON.parse(result));\n            });\n\n            jQuery('.node-details').css({ \"display\": \"block\", right: -500 }).animate({ right: 0 }).removeClass('collapsed');\n        } else {\n            this.setState({ data: scope.cache[params.type + '_' + params.id], type: params.type, loading: false });\n\n            if (jQuery('.node-details').hasClass('collapsed')) {\n                jQuery('.node-details').css({ \"display\": \"block\", right: -500 }).animate({ right: 0 }).removeClass('collapsed');\n            }\n        }\n    },\n    onResponse: function onResponse(result) {\n        scope.cache[result.type + '_' + result.id] = result;\n\n        this.setState({ data: result, type: result.type, loading: false });\n    },\n    handleClickNode: function handleClickNode(event) {\n        var type = event.target.getAttribute(\"data-type\");\n        var id = event.target.getAttribute(\"data-id\");\n\n        showNodeDescription(type, id);\n\n        hideTableView();\n\n        event.preventDefault();\n    },\n    render: function render() {\n        var _this = this;\n\n        var className = \"node-details \" + this.state.type;\n\n        var editURL = \"https://impactspace.com/\" + (this.state.type == 'investor' ? 'financial-organization' : \"company\") + \"/\" + (!this.state.loading ? this.state.data.slug : '');\n\n        var header_name = !this.state.loading ? React.createElement(\n            \"h4\",\n            null,\n            this.state.data.name,\n            React.createElement(\n                \"a\",\n                { href: editURL, className: \"edit-entity\", target: \"_blank\" },\n                \"Edit\"\n            )\n        ) : React.createElement(\n            \"h4\",\n            null,\n            React.createElement(\"i\", { className: \"fa fa-refresh fa-spin\", \"aria-hidden\": \"true\" })\n        );\n        var styles_str = !this.state.loading && typeof this.state.data.company_logo != 'undefined' ? { \"backgroundImage\": \"url(\" + this.state.data.company_logo + \")\" } : {};\n        var header_logo = !this.state.loading && typeof this.state.data.company_logo != 'undefined' ? React.createElement(\"div\", { className: \"logo-container\", style: styles_str }) : '';\n\n        var do_not_render = [\"id\", \"type\", \"impactspace_id\", \"impactspace_updated_at\", \"created_at\", \"name\", \"updated_at\", \"slug\", \"investors\", \"companies\", \"crunchbase_id\", \"crunchbase_updated_at\", \"company_logo\", \"crunchbase_url\", \"network_map_ready\", \"last_existence_verification\"];\n        var do_not_if_value = [\"0000-00-00\"];\n        var follow_order = [\"two-columns\", \"headquarters\", \"founded\", \"founders\", \"industry\", \"legal structure\", \"mission statement\", \"website\", \"external links\", \"description\", \"number of employees\", \"investor type\", \"phone\", \"email\", \"social\"];\n\n        var overviewItems = React.createElement(\"div\", null);\n        if (!this.state.loading) {\n            var overview_data = [];\n            var social = [];\n\n            /* FIRST ELEMENT WITH INVESTMENTS RESUME */\n            var total_funding = 0;\n            var investors_number = 0;\n\n            var investments = [];\n            var investors = [];\n\n            var investments_info = this.state.type == 'company' ? this.state.data.investors : this.state.data.companies;\n\n            var most_recent_date = new Date(0, 0, 0);\n            var most_recent_investment;\n\n            for (var key in investments_info) {\n                var investor = investments_info[key];\n\n                for (var i in investor) {\n                    total_funding += Number(investor[i].fund.amount);\n                    investors_number++;\n                    investments.push(investor[i].fund);\n                    investors.push(investor[i]);\n\n                    if (typeof investor[i].fund.date != 'undefined') {\n                        var date_arr = investor[i].fund.date.split('-');\n                        var investment_date = new Date(date_arr[0], date_arr[1], date_arr[2]);\n\n                        if (investment_date.valueOf() > most_recent_date.valueOf()) {\n                            most_recent_date = investment_date;\n                            most_recent_investment = investor[i].fund;\n                        }\n                    }\n                }\n            }\n\n            for (var key in this.state.data) {\n                var do_render = true;\n                var value = this.state.data[key];\n\n                for (var not_render_key in do_not_render) {\n                    do_render &= key != do_not_render[not_render_key];\n                }\n                for (var not_render_key in do_not_if_value) {\n                    do_render &= value != do_not_if_value[not_render_key];\n                }\n\n                if (do_render) {\n\n                    var key_str = key.split('_').join(' ');\n                    var content_str = this.state.data[key].split(\"\\\\'\").join(\"'\").split(\"\\\\n\").join(\"[[NEWLINE]]\").split(\"\\\\r\").join(\"\\r\");\n                    var do_add = true;\n\n                    switch (key) {\n                        case \"overview\":\n                            key_str = \"description\";\n                            var content_arr = content_str.split('[[NEWLINE]]');\n                            var content_str = content_arr.map(function (itemInfo, index) {\n                                return React.createElement(\n                                    \"p\",\n                                    { key: index },\n                                    itemInfo\n                                );\n                            });\n                            break;\n                        case \"external_links\":\n                            content_str = content_str.split('\"').join('');\n                            var all_external = content_str.split(',');\n\n                            var all_external_links = all_external.map(function (external_link_str, index) {\n                                return React.createElement(\n                                    \"li\",\n                                    { key: index },\n                                    React.createElement(\n                                        \"a\",\n                                        { href: external_link_str, target: \"_blank\" },\n                                        external_link_str\n                                    )\n                                );\n                            });\n                            content_str = React.createElement(\n                                \"ul\",\n                                null,\n                                all_external_links\n                            );\n                            break;\n                        case \"number_of_employees\":\n                            do_add = content_str != '';\n                            break;\n                        case \"website\":\n                            content_str = content_str.split('\"').join('');\n                            content_str = React.createElement(\n                                \"a\",\n                                { href: content_str, target: \"_blank\" },\n                                content_str\n                            );\n                            break;\n                        case \"founded_date\":\n                            key_str = \"founded\";\n                            content_str = getFormattedDate(content_str, \"long\");\n\n                            break;\n                        case \"phone\":\n                            if (content_str == '' || content_str == '0' || content_str == 0) {\n                                do_add = false;\n                            }\n                            var url_str = \"tel:\" + content_str;\n                            content_str = React.createElement(\n                                \"a\",\n                                { href: url_str, target: \"_blank\" },\n                                content_str\n                            );\n                            break;\n                        case \"email\":\n                            var url_str = \"mailto:\" + content_str;\n                            content_str = React.createElement(\n                                \"a\",\n                                { href: url_str, target: \"_blank\" },\n                                content_str\n                            );\n                            break;\n                        case \"twitter\":\n                            var twitter_user = content_str.split('@');\n                            content_str = \"https://twitter.com/\" + twitter_user[1];\n                            social.push({ network: key, url: content_str });\n                            do_add = false;\n                            break;\n                        case \"facebook\":\n                        case \"linkedin\":\n                            social.push({ network: key, url: content_str });\n                            do_add = false;\n                            break;\n                    }\n\n                    if (do_add) {\n                        overview_data.push({ title: key_str, content: content_str });\n                    }\n                }\n            }\n\n            /* ADD SOCIAL SECTION */\n\n            if (social.length > 0) {\n                var social_items = social.map(function (itemInfo) {\n                    var className = \"fa fa-\" + itemInfo.network + \"-square\";\n                    return React.createElement(\n                        \"a\",\n                        { href: itemInfo.url, target: \"_blank\", key: itemInfo.network },\n                        React.createElement(\"i\", { className: className, \"aria-hidden\": \"true\" })\n                    );\n                });\n                overview_data.push({ title: \"social\", content: social_items });\n            }\n\n            var overview_data_sort = [];\n            for (var order_index in follow_order) {\n                for (var overview_data_index in overview_data) {\n                    if (follow_order[order_index] == overview_data[overview_data_index].title) {\n                        overview_data_sort.push(overview_data[overview_data_index]);\n                        overview_data.splice(overview_data_index, 1);\n                        break;\n                    }\n                }\n            }\n\n            if (overview_data.length > 0) {\n                for (var overview_data_index in overview_data) {\n                    overview_data_sort.push(overview_data[overview_data_index]);\n                }\n            }\n\n            overviewItems = overview_data_sort.map(function (itemInfo) {\n\n                var slug = getSlug(itemInfo.title);\n                var className = \"details-item details-\" + slug;\n\n                if (itemInfo.title == 'two-columns') {\n                    slug = getSlug(itemInfo.content.column_a.title + ' ' + itemInfo.content.column_b.title);\n\n                    return React.createElement(\n                        \"div\",\n                        { className: \"details-item two-columns\", key: slug },\n                        React.createElement(\n                            \"div\",\n                            { className: \"details-column column-a\" },\n                            React.createElement(\n                                \"span\",\n                                null,\n                                itemInfo.content.column_a.title\n                            ),\n                            React.createElement(\n                                \"p\",\n                                null,\n                                itemInfo.content.column_a.content\n                            )\n                        ),\n                        React.createElement(\n                            \"div\",\n                            { className: \"details-column column-b\" },\n                            React.createElement(\n                                \"span\",\n                                null,\n                                itemInfo.content.column_b.title\n                            ),\n                            React.createElement(\n                                \"p\",\n                                null,\n                                itemInfo.content.column_b.content\n                            )\n                        )\n                    );\n                }\n\n                return React.createElement(\n                    \"div\",\n                    { className: className, key: slug },\n                    React.createElement(\n                        \"span\",\n                        null,\n                        itemInfo.title,\n                        \": \"\n                    ),\n                    React.createElement(\n                        \"p\",\n                        null,\n                        itemInfo.content\n                    )\n                );\n            });\n        }\n\n        var funding_tab_content = \"\";\n        var funding_tab = \"\";\n        if (!this.state.loading) {\n            var total_funding = 0;\n            var investors_number = 0;\n\n            var investments = [];\n            var investors = [];\n\n            var investments_info = this.state.type == 'company' ? this.state.data.investors : this.state.data.companies;\n\n            for (var key in investments_info) {\n                var investor = investments_info[key];\n\n                for (var i in investor) {\n                    investor[i].id = key;\n                    total_funding += Number(investor[i].fund.amount);\n                    investors_number++;\n                    investments.push(investor[i].fund);\n                    investors.push(investor[i]);\n                }\n            }\n\n            var funding_rounds_table = investments.map(function (itemInfo, index) {\n\n                var fund_date_str = getFormattedDate(itemInfo.date, \"short\");\n\n                var fund_type = '-';\n                if (typeof itemInfo.type != 'undefined') {\n                    fund_type = itemInfo.type;\n                }\n                return React.createElement(\n                    \"tr\",\n                    { key: index },\n                    React.createElement(\n                        \"td\",\n                        null,\n                        fund_date_str\n                    ),\n                    React.createElement(\n                        \"td\",\n                        null,\n                        \"$\",\n                        abbrNumberFormat(itemInfo.amount),\n                        \" / \",\n                        fund_type\n                    ),\n                    React.createElement(\n                        \"td\",\n                        null,\n                        \"1\"\n                    )\n                );\n            });\n\n            var investor_label = \"Investors\";\n            if (this.state.type == 'investor') {\n                investor_label = \"Companies\";\n            }\n\n            var investors_table = investors.map(function (itemInfo, index) {\n                var titles = \"\";\n                var investmentAmount = Number(itemInfo.fund.amount) == 0 ? ' Undisclosed' : abbrNumberFormat(itemInfo.fund.amount);\n                if (index == 0) {\n                    titles = React.createElement(\n                        \"thead\",\n                        { className: \"title\" },\n                        React.createElement(\n                            \"tr\",\n                            null,\n                            React.createElement(\n                                \"th\",\n                                null,\n                                \"Date\"\n                            ),\n                            React.createElement(\n                                \"th\",\n                                null,\n                                \"Round\"\n                            ),\n                            React.createElement(\n                                \"th\",\n                                null,\n                                \"Total Round Amount\"\n                            )\n                        )\n                    );\n                }\n                var fund_type = 'Undisclosed';\n                if (typeof itemInfo.fund.type != 'undefined') {\n                    fund_type = itemInfo.fund.type;\n                }\n\n                return React.createElement(\n                    \"table\",\n                    { className: \"table-details\", key: index },\n                    titles,\n                    React.createElement(\n                        \"thead\",\n                        null,\n                        React.createElement(\n                            \"tr\",\n                            null,\n                            React.createElement(\n                                \"th\",\n                                null,\n                                React.createElement(\n                                    \"a\",\n                                    { href: \"#\", onClick: _this.handleClickNode, \"data-id\": itemInfo.id, \"data-type\": _this.state.type == 'investor' ? 'company' : 'investor' },\n                                    itemInfo.name\n                                )\n                            )\n                        )\n                    ),\n                    React.createElement(\n                        \"tbody\",\n                        null,\n                        React.createElement(\n                            \"tr\",\n                            null,\n                            React.createElement(\n                                \"td\",\n                                null,\n                                getFormattedDate(itemInfo.fund.date)\n                            ),\n                            React.createElement(\n                                \"td\",\n                                null,\n                                fund_type\n                            ),\n                            React.createElement(\n                                \"td\",\n                                null,\n                                investmentAmount\n                            )\n                        )\n                    )\n                );\n            });\n\n            funding_tab = React.createElement(\n                \"li\",\n                null,\n                React.createElement(\n                    \"a\",\n                    { href: \"#funding-details\", \"data-toggle\": \"tab\" },\n                    \"Funding Details\"\n                )\n            );\n            funding_tab_content = React.createElement(\n                \"div\",\n                { className: \"tab-pane\", id: \"funding-details\" },\n                React.createElement(\n                    \"div\",\n                    { className: \"details-item table\" },\n                    React.createElement(\n                        \"h3\",\n                        { className: \"notification\" },\n                        React.createElement(\n                            \"i\",\n                            null,\n                            investor_label\n                        ),\n                        React.createElement(\n                            \"span\",\n                            null,\n                            investors_number\n                        )\n                    ),\n                    investors_table\n                )\n            );\n        }\n        var body = !this.state.loading ? React.createElement(\n            \"div\",\n            { className: \"details-body\" },\n            React.createElement(\n                \"div\",\n                { id: \"details-body\" },\n                React.createElement(\n                    \"ul\",\n                    { className: \"nav nav-pills\" },\n                    React.createElement(\n                        \"li\",\n                        { className: \"active\" },\n                        React.createElement(\n                            \"a\",\n                            { href: \"#overview\", \"data-toggle\": \"tab\" },\n                            \"Overview\"\n                        )\n                    ),\n                    funding_tab\n                ),\n                React.createElement(\n                    \"div\",\n                    { className: \"tab-content clearfix\" },\n                    React.createElement(\n                        \"div\",\n                        { className: \"tab-pane active\", id: \"overview\" },\n                        overviewItems\n                    ),\n                    funding_tab_content\n                )\n            )\n        ) : '';\n\n        return React.createElement(\n            \"div\",\n            { className: className },\n            React.createElement(\n                \"a\",\n                { href: \"#\", className: \"close-module\" },\n                React.createElement(\"i\", { className: \"fa fa-times\", \"aria-hidden\": \"true\" })\n            ),\n            React.createElement(\n                \"div\",\n                { className: \"details-header\" },\n                header_logo,\n                header_name\n            ),\n            body\n        );\n    }\n});","var NodeDescription = React.createClass({\n    getInitialState: function () {\n        addCallback(\"checkNodeInfo\", this.onUpdateData);\n        addCallback(\"onNodeDescriptionResponse\", this.onResponse);\n        return {loading:true};\n    },\n    onUpdateData: function(params){\n        if(typeof scope.cache[params.type+'_'+params.id]=='undefined'){\n    \n            var call_url = ajaxCall(\"get_node\", {type:params.type, id:params.id});\n\n            this.setState({loading:true, type: params.type});\n\n                jQuery.ajax({url:call_url}).done(function( result ) {\n                    scopeDispatchEvent(\"onNodeDescriptionResponse\", JSON.parse(result) );\n                });\n\n\n            jQuery('.node-details').css({\"display\":\"block\", right:-500}).animate({right:0}).removeClass('collapsed');\n\n\n        } else {\n            this.setState({data:scope.cache[params.type+'_'+params.id], type:params.type, loading:false});\n\n            if(jQuery('.node-details').hasClass('collapsed')){\n                jQuery('.node-details').css({\"display\":\"block\", right:-500}).animate({right:0}).removeClass('collapsed');\n            }\n        }\n    },\n    onResponse: function(result){\n        scope.cache[result.type+'_'+result.id] = result;\n\n        this.setState({data:result, type:result.type, loading:false});\n    },\n    handleClickNode: function(event){\n        var type = event.target.getAttribute(\"data-type\");\n        var id = event.target.getAttribute(\"data-id\");\n\n        showNodeDescription(type, id);\n\n        hideTableView();\n\n        event.preventDefault();\n\n    },\n    render: function(){\n        var className = \"node-details \"+this.state.type;\n\n        var editURL = \"https://impactspace.com/\"+(this.state.type=='investor' ? 'financial-organization' : \"company\")+\"/\"+ (!this.state.loading ? this.state.data.slug : '');\n\n        var header_name = !this.state.loading ? <h4>{this.state.data.name}<a href={editURL} className=\"edit-entity\" target=\"_blank\">Edit</a></h4> : <h4><i className=\"fa fa-refresh fa-spin\" aria-hidden=\"true\"></i></h4>\n        var styles_str = !this.state.loading && (typeof this.state.data.company_logo!='undefined') ? {\"backgroundImage\":\"url(\"+this.state.data.company_logo+\")\"} : {};\n        var header_logo = !this.state.loading && (typeof this.state.data.company_logo!='undefined') ? <div className=\"logo-container\" style={styles_str}></div> : '';\n\n        var do_not_render = [\"id\", \"type\", \"impactspace_id\", \"impactspace_updated_at\", \"created_at\", \"name\", \"updated_at\", \"slug\", \"investors\", \"companies\", \"crunchbase_id\", \"crunchbase_updated_at\", \"company_logo\", \"crunchbase_url\", \"network_map_ready\", \"last_existence_verification\"];\n        var do_not_if_value = [\"0000-00-00\"];\n        var follow_order = [\"two-columns\",\"headquarters\", \"founded\", \"founders\", \"industry\", \"legal structure\", \"mission statement\", \"website\", \"external links\", \"description\", \"number of employees\", \"investor type\",\"phone\", \"email\", \"social\"];\n\n        var overviewItems = <div></div>;\n        if(!this.state.loading){\n            var overview_data = [];\n            var social = [];\n\n            /* FIRST ELEMENT WITH INVESTMENTS RESUME */\n                var total_funding = 0;\n                var investors_number = 0;\n\n                var investments = [];\n                var investors = [];\n\n                var investments_info = this.state.type=='company' ? this.state.data.investors : this.state.data.companies;\n\n                var most_recent_date = new Date(0,0,0);\n                var most_recent_investment;\n\n                for(var key in investments_info){\n                    var investor = investments_info[key];\n\n\n                    for(var i in investor){\n                        total_funding+= Number(investor[i].fund.amount);\n                        investors_number++;\n                        investments.push(investor[i].fund);\n                        investors.push(investor[i]);\n\n                        if(typeof investor[i].fund.date != 'undefined'){\n                            var date_arr = investor[i].fund.date.split('-');\n                            var investment_date = new Date(date_arr[0], date_arr[1], date_arr[2]);\n                            \n                            if(investment_date.valueOf()>most_recent_date.valueOf()){\n                                most_recent_date = investment_date;\n                                most_recent_investment = investor[i].fund;\n                            }\n                        }\n                    }\n\n                }\n\n            for(var key in this.state.data){\n                var do_render = true;\n                var value = this.state.data[key];\n\n                for(var not_render_key in do_not_render){\n                    do_render &= key != do_not_render[not_render_key];\n                }\n                for(var not_render_key in do_not_if_value){\n                    do_render &= value != do_not_if_value[not_render_key];\n                }\n\n                if( do_render ){\n                    \n                    var key_str = key.split('_').join(' ');\n                    var content_str = this.state.data[key].split(\"\\\\'\").join(\"'\").split(\"\\\\n\").join(\"[[NEWLINE]]\").split(\"\\\\r\").join(\"\\r\");\n                    var do_add = true;\n                    \n\n                    switch(key){\n                        case \"overview\":\n                            key_str = \"description\";\n                            var content_arr = content_str.split('[[NEWLINE]]');\n                            var content_str = content_arr.map((itemInfo, index) => {\n                                return <p key={index}>{itemInfo}</p>;\n                            });\n                            break;\n                        case \"external_links\":\n                            content_str = content_str.split('\"').join('');\n                            var all_external = content_str.split(',');\n                            \n                            var all_external_links = all_external.map((external_link_str, index) => {\n                                return <li key={index}><a href={external_link_str} target=\"_blank\">{external_link_str}</a></li>;\n                            });\n                            content_str = <ul>{all_external_links}</ul>;\n                            break;\n                        case \"number_of_employees\":\n                            do_add = content_str!='';\n                            break;\n                        case \"website\":\n                            content_str = content_str.split('\"').join('');\n                            content_str = <a href={content_str} target=\"_blank\">{content_str}</a>;\n                            break;\n                        case \"founded_date\":\n                            key_str = \"founded\";\n                            content_str = getFormattedDate(content_str, \"long\");\n                            \n                            break;\n                        case \"phone\":\n                            if(content_str=='' || content_str=='0' || content_str==0){\n                                do_add = false;\n                            }\n                            var url_str = \"tel:\"+content_str;\n                            content_str = <a href={url_str} target=\"_blank\">{content_str}</a>;\n                            break;\n                        case \"email\":\n                            var url_str = \"mailto:\"+content_str;\n                            content_str = <a href={url_str} target=\"_blank\">{content_str}</a>;\n                            break;\n                        case \"twitter\":\n                            var twitter_user = content_str.split('@');\n                            content_str = \"https://twitter.com/\"+twitter_user[1];\n                            social.push({network:key, url:content_str});\n                            do_add = false;\n                            break;\n                        case \"facebook\":\n                        case \"linkedin\":\n                            social.push({network:key, url:content_str});\n                            do_add = false;\n                            break;\n                    }\n\n                    if(do_add){\n                        overview_data.push({title:key_str, content:content_str});\n                    }\n                }\n            }\n\n            /* ADD SOCIAL SECTION */\n\n            if(social.length>0){\n                    var social_items = social.map((itemInfo) => {\n                        var className = \"fa fa-\"+itemInfo.network+\"-square\";\n                        return (\n                        <a href={itemInfo.url} target=\"_blank\" key={itemInfo.network}>\n                            <i className={className} aria-hidden=\"true\"></i>\n                        </a>\n                        );\n                    });\n                    overview_data.push({title:\"social\", content:social_items});\n            }\n            \n            var overview_data_sort = [];\n            for(var order_index in follow_order){\n                for(var overview_data_index in overview_data){\n                    if(follow_order[order_index] == overview_data[overview_data_index].title){\n                        overview_data_sort.push(overview_data[overview_data_index]);\n                        overview_data.splice(overview_data_index, 1);\n                        break;\n                    }\n                }\n            }\n            \n            if(overview_data.length>0){\n                for(var overview_data_index in overview_data){\n                    overview_data_sort.push(overview_data[overview_data_index]);\n                }\n            }\n\n            overviewItems = overview_data_sort.map((itemInfo) => {\n\n                var slug = getSlug( itemInfo.title )\n                var className = \"details-item details-\"+slug;\n\n                if(itemInfo.title=='two-columns'){\n                    slug = getSlug( itemInfo.content.column_a.title+' '+itemInfo.content.column_b.title );\n\n                    return <div className=\"details-item two-columns\" key={slug}>\n                                <div className=\"details-column column-a\">\n                                    <span>{itemInfo.content.column_a.title}</span>\n                                    <p>{itemInfo.content.column_a.content}</p>\n                                </div>\n                                <div className=\"details-column column-b\">\n                                    <span>{itemInfo.content.column_b.title}</span>\n                                    <p>{itemInfo.content.column_b.content}</p>\n                                </div>\n                            </div>;\n                }\n\n                return (\n                    <div className={className} key={slug}>\n                        <span>{itemInfo.title}: </span>\n                        <p>{itemInfo.content}</p>\n                    </div>\n                )\n            });\n        }\n\n        var funding_tab_content = \"\";\n        var funding_tab = \"\";\n        if(!this.state.loading){\n            var total_funding = 0;\n            var investors_number = 0;\n            \n            var investments = [];\n            var investors = [];\n\n            var investments_info = this.state.type=='company' ? this.state.data.investors : this.state.data.companies;\n\n\n            for(var key in investments_info){\n                var investor = investments_info[key];\n\n                for(var i in investor){\n                    investor[i].id = key;\n                    total_funding+= Number(investor[i].fund.amount);\n                    investors_number++;\n                    investments.push(investor[i].fund);\n                    investors.push(investor[i]);\n                }\n                \n            }\n            \n            var funding_rounds_table = investments.map((itemInfo, index) => {\n\n                var fund_date_str = getFormattedDate(itemInfo.date, \"short\");\n\n                var fund_type = '-';\n                if(typeof itemInfo.type != 'undefined'){\n                    fund_type = itemInfo.type;\n                }\n                return <tr key={index}>\n                        <td>{fund_date_str}</td>\n                        <td>${abbrNumberFormat(itemInfo.amount)} / {fund_type}</td>\n                        <td>1</td>\n                    </tr>;\n            });\n\n            var investor_label = \"Investors\";\n            if(this.state.type=='investor'){\n                investor_label = \"Companies\";\n            }\n\n            var investors_table = investors.map((itemInfo, index) => {\n                var titles = \"\";\n                var investmentAmount = Number(itemInfo.fund.amount)==0 ? ' Undisclosed' : abbrNumberFormat(itemInfo.fund.amount);\n                if(index==0){\n                    titles = <thead className=\"title\">\n                            <tr>\n                                <th>Date</th>\n                                <th>Round</th>\n                                <th>Total Round Amount</th>\n                            </tr>\n                        </thead>;\n                }\n                var fund_type = 'Undisclosed';\n                if(typeof itemInfo.fund.type != 'undefined'){\n                    fund_type = itemInfo.fund.type;\n                }\n\n\n                return <table className=\"table-details\" key={index}>\n                        {titles}\n                        \n                        <thead>\n                            <tr>\n                              <th>\n                                  <a href='#' onClick={this.handleClickNode} data-id={itemInfo.id} data-type={this.state.type=='investor'?'company':'investor'}>\n                                  {itemInfo.name}\n                                  </a>\n                              </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>{getFormattedDate(itemInfo.fund.date)}</td>\n                                <td>{fund_type}</td>\n                                <td>{investmentAmount}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n            });   \n            \n            \n            funding_tab = <li><a href=\"#funding-details\" data-toggle=\"tab\">Funding Details</a></li>;\n            funding_tab_content = <div className=\"tab-pane\" id=\"funding-details\">\n                <div className=\"details-item table\">\n                    <h3  className=\"notification\"><i>{investor_label}</i><span>{investors_number}</span></h3>\n\n                    {investors_table}\n\n                </div>\n\n            </div>;\n        }\n        var body = !this.state.loading ? <div className=\"details-body\">\n                                                <div id=\"details-body\">\n                                                    <ul  className=\"nav nav-pills\">\n                                                        <li className=\"active\">\n                                                            <a  href=\"#overview\" data-toggle=\"tab\">Overview</a>\n                                                        </li>\n                                                        {funding_tab}\n                                                    </ul>\n                                                    <div className=\"tab-content clearfix\">\n                                                        <div className=\"tab-pane active\" id=\"overview\">\n                                                            {overviewItems}\n                                                        </div>\n                                                        {funding_tab_content}\n                                                    </div>\n                                                </div>\n\n                                            </div> : '';\n\n        return  <div className={className}>\n                    <a href=\"#\" className=\"close-module\"><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a>\n                    <div className=\"details-header\">\n                        {header_logo}\n                        {header_name}\n                    </div>\n                    {body}\n                </div>\n        }\n});","'use strict';\n\nvar Pagination = React.createClass({\n    displayName: 'Pagination',\n\n    getInitialState: function getInitialState() {\n        addCallback(\"updatePagination\", this.onUpdateData);\n\n        var initialState = {};\n        if (typeof this.props.pagination != 'undefined') {\n            this.props.pagination.total_pages = Math.ceil(this.props.pagination.total / this.props.pagination.per_page);\n            initialState = this.props.pagination;\n        }\n\n        return initialState;\n    },\n    onUpdateTimestamp: function onUpdateTimestamp(timestamp) {\n        this.setState({ timestamp: timestamp });\n    },\n    onUpdateData: function onUpdateData(params) {\n\n        if (typeof params.total != 'undefined') {\n            params.total_pages = Math.ceil(params.total / params.per_page);\n            this.setState(params);\n        }\n    },\n    updatePagination: function updatePagination(e) {\n        scopeDispatchEvent(\"updatePagination\", { delta: 1 });\n        e.preventDefault();\n    },\n    specificPage: function specificPage(number) {\n        scopeDispatchEvent(\"updatePagination\", { page: number });\n    },\n    firstPage: function firstPage(e) {\n        this.specificPage(1);\n        e.preventDefault();\n    },\n    prevPage: function prevPage(e) {\n        scopeDispatchEvent(\"updatePagination\", { delta: -1 });\n        e.preventDefault();\n    },\n    nextPage: function nextPage(e) {\n        scopeDispatchEvent(\"updatePagination\", { delta: 1 });\n        e.preventDefault();\n    },\n    lastPage: function lastPage(e) {\n        this.specificPage(this.state.total_pages);\n        e.preventDefault();\n    },\n    jumpToPage: function jumpToPage(e) {\n        this.specificPage(Number(e.target.getAttribute(\"data-page\")));\n        e.preventDefault();\n    },\n    render: function render() {\n        var _this = this;\n\n        if (typeof this.state.total != 'undefined') {\n            var total_str = thousandNotation(this.state.total);\n            var showing_pages = 2;\n            var pages_number = [];\n\n            var left_side = [];\n            var right_side_calculation = this.state.total_pages - this.state.current_page;\n            var right_side_val = right_side_calculation > showing_pages ? showing_pages : right_side_calculation;\n\n            for (var i = this.state.current_page - 1; i > this.state.current_page - showing_pages * 2; i--) {\n                if ((left_side.length < showing_pages || right_side_val + left_side.length < showing_pages * 2) && i > 0) {\n                    left_side = [i].concat(left_side);\n                }\n            }\n\n            var right_side = [];\n\n            for (var i = this.state.current_page + 1; i <= this.state.current_page + showing_pages * 2; i++) {\n\n                if ((right_side.length < showing_pages || right_side.length + left_side.length < showing_pages * 2) && i <= this.state.total_pages) {\n                    right_side.push(i);\n                }\n            }\n\n            pages_number = left_side.concat([this.state.current_page]);\n            pages_number = pages_number.concat(right_side);\n\n            var rowsList = pages_number.map(function (index) {\n                if (index == _this.state.current_page) {\n                    return React.createElement(\n                        'i',\n                        { key: index },\n                        thousandNotation(index)\n                    );\n                }\n                return React.createElement(\n                    'a',\n                    { key: index, href: '#', 'data-page': index, onClick: _this.jumpToPage },\n                    thousandNotation(index)\n                );\n            });\n\n            var forward_action = \"\";\n            var last_page_action = \"\";\n            var backward_action = \"\";\n            var first_page_action = \"\";\n\n            if (this.state.current_page != this.state.total_pages) {\n                forward_action = React.createElement(\n                    'a',\n                    { href: '#', onClick: this.nextPage },\n                    React.createElement('i', { className: 'fa fa-caret-right', 'aria-hidden': 'true' })\n                );\n                last_page_action = React.createElement(\n                    'a',\n                    { href: '#', onClick: this.lastPage },\n                    React.createElement('i', { className: 'fa fa-forward', 'aria-hidden': 'true' })\n                );\n            }\n            if (this.state.current_page != 1) {\n                backward_action = React.createElement(\n                    'a',\n                    { href: '#', onClick: this.prevPage },\n                    React.createElement('i', { className: 'fa fa-caret-left', 'aria-hidden': 'true' })\n                );\n                first_page_action = React.createElement(\n                    'a',\n                    { href: '#', onClick: this.firstPage },\n                    React.createElement('i', { className: 'fa fa-backward', 'aria-hidden': 'true' })\n                );\n            }\n\n            var timestamp = \"\";\n\n            return React.createElement(\n                'div',\n                { className: 'results-wrapper' },\n                React.createElement(\n                    'span',\n                    null,\n                    'Displaying results ',\n                    thousandNotation(this.state.to)\n                )\n            );\n        } else {\n            return React.createElement('div', null);\n        }\n    }\n});","var Pagination = React.createClass({\n    getInitialState: function () {\n        addCallback(\"updatePagination\", this.onUpdateData);\n\n        var initialState = {};\n        if (typeof this.props.pagination != 'undefined') {\n            this.props.pagination.total_pages = Math.ceil(this.props.pagination.total / this.props.pagination.per_page);\n            initialState = this.props.pagination;\n        }\n\n        return initialState;\n    },\n    onUpdateTimestamp: function(timestamp){\n        this.setState({timestamp:timestamp});\n    },\n    onUpdateData: function(params){\n        \n        if(typeof params.total != 'undefined'){\n            params.total_pages = Math.ceil(params.total/params.per_page);\n            this.setState(params);\n        }\n    },\n    updatePagination: function(e){\n        scopeDispatchEvent(\"updatePagination\", {delta:1});\n        e.preventDefault();\n    },\n    specificPage: function(number){\n        scopeDispatchEvent(\"updatePagination\", {page:number});\n    },\n    firstPage: function(e){\n        this.specificPage(1);\n        e.preventDefault();\n    },\n    prevPage: function(e){\n        scopeDispatchEvent(\"updatePagination\", {delta:-1});\n        e.preventDefault();\n    },\n    nextPage: function(e){\n        scopeDispatchEvent(\"updatePagination\", {delta:1});\n        e.preventDefault();\n    },\n    lastPage: function(e){\n        this.specificPage(this.state.total_pages);\n        e.preventDefault();\n    },\n    jumpToPage:function(e){\n        this.specificPage(Number(e.target.getAttribute(\"data-page\")));\n        e.preventDefault();\n    },\n    render: function(){\n        if(typeof this.state.total != 'undefined') {\n            var total_str = thousandNotation(this.state.total);\n            var showing_pages = 2;\n            var pages_number = [];\n\n            var left_side = [];\n            var right_side_calculation = (this.state.total_pages - this.state.current_page);\n            var right_side_val = right_side_calculation > showing_pages ? showing_pages : right_side_calculation;\n\n            for (var i = this.state.current_page - 1; i > (this.state.current_page - (showing_pages * 2)); i--) {\n                if ((\n                        left_side.length < showing_pages ||\n                        ((right_side_val + left_side.length) < (showing_pages * 2))\n                    )\n                    && i > 0\n                ) {\n                    left_side = [i].concat(left_side);\n                }\n            }\n\n            var right_side = [];\n\n            for (var i = this.state.current_page + 1; i <= (this.state.current_page + (showing_pages * 2)); i++) {\n\n                if ((\n                        right_side.length < showing_pages ||\n                        ((right_side.length + left_side.length) < (showing_pages * 2))\n                    )\n                    && i <= this.state.total_pages\n\n                ) {\n                    right_side.push(i);\n                }\n            }\n\n            pages_number = left_side.concat([this.state.current_page]);\n            pages_number = pages_number.concat(right_side);\n\n\n            var rowsList = pages_number.map((index) => {\n                if (index == this.state.current_page) {\n                    return (\n                        <i key={index}>{thousandNotation(index)}</i>\n                    )\n                }\n                return (\n                    <a key={index} href=\"#\" data-page={index} onClick={this.jumpToPage}>{thousandNotation(index)}</a>\n                )\n\n            });\n\n            var forward_action = \"\";\n            var last_page_action = \"\";\n            var backward_action = \"\";\n            var first_page_action = \"\";\n\n            if (this.state.current_page != this.state.total_pages) {\n                forward_action =\n                    <a href=\"#\" onClick={this.nextPage}><i className=\"fa fa-caret-right\" aria-hidden=\"true\"></i></a>;\n                last_page_action =\n                    <a href=\"#\" onClick={this.lastPage}><i className=\"fa fa-forward\" aria-hidden=\"true\"></i></a>;\n            }\n            if (this.state.current_page != 1) {\n                backward_action =\n                    <a href=\"#\" onClick={this.prevPage}><i className=\"fa fa-caret-left\" aria-hidden=\"true\"></i></a>;\n                first_page_action =\n                    <a href=\"#\" onClick={this.firstPage}><i className=\"fa fa-backward\" aria-hidden=\"true\"></i></a>;\n            }\n\n            var timestamp = \"\";\n\n            return <div className=\"results-wrapper\">\n                    <span>\n                    Displaying results {thousandNotation(this.state.to)}\n                    </span>\n            </div>\n        } else {\n            return <div></div>\n        }\n    }\n});","'use strict';\n\nvar ResultsCaption = React.createClass({\n    displayName: 'ResultsCaption',\n\n    getInitialState: function getInitialState() {\n        addCallback(\"updateResults\", this.onUpdateData);\n        if (typeof this.props.scope.results != 'undefined') {\n            return this.props.scope.results;\n        } else {\n            return {};\n        }\n    },\n    onUpdateData: function onUpdateData(params) {\n        this.setState(params);\n    },\n    render: function render() {\n        if (typeof this.state.investors_count != 'undefined') {\n            if (this.state.investors_count == 0) {\n                return React.createElement(\n                    'span',\n                    null,\n                    'Results: This data shows ',\n                    this.state.companies_count,\n                    ' companies.'\n                );\n            }\n            return React.createElement(\n                'span',\n                null,\n                'Results: This data shows ',\n                thousandNotation(this.state.investors_count),\n                ' investors and ',\n                thousandNotation(this.state.companies_count),\n                ' companies.'\n            );\n        } else {\n            return React.createElement(\n                'span',\n                null,\n                React.createElement('i', { className: 'fa fa-refresh fa-spin', 'aria-hidden': 'true' })\n            );\n        }\n        ;\n    }\n});","var ResultsCaption = React.createClass({\n    getInitialState: function () {\n        addCallback(\"updateResults\", this.onUpdateData);\n        if (typeof this.props.scope.results != 'undefined') {\n            return this.props.scope.results\n        } else {\n            return {}\n        }\n\n\n    },\n    onUpdateData: function(params){\n        this.setState(params);\n    },\n    render: function() {\n        if (typeof this.state.investors_count != 'undefined') {\n            if (this.state.investors_count == 0) {\n                return <span>\n                    Results: This data shows {this.state.companies_count} companies.\n                </span>;\n            }\n            return <span>\n                Results: This data shows {thousandNotation(this.state.investors_count)} investors and {thousandNotation(this.state.companies_count)} companies.\n            </span>\n        } else {\n            return <span><i className=\"fa fa-refresh fa-spin\" aria-hidden=\"true\"></i></span>\n        }\n        ;\n    }\n});","\"use strict\";\n\nvar SearchModule = React.createClass({\n    displayName: \"SearchModule\",\n\n    getInitialState: function getInitialState() {\n        addCallback(\"resetSearch\", this.resetSearch);\n        addCallback(\"updateNodesType\", this.updateNodesType);\n\n        return {\n            keywords: \"\",\n            timestamp: new Date().getTime(),\n            placeholder: 'Search Companies'\n        };\n    },\n    resetSearch: function resetSearch() {\n        jQuery('#search-keywords').val('');\n        this.setState({ keywords: \"\" });\n\n        nmTrackEvent('Explore', 'Reset Search');\n    },\n    updateNodesType: function updateNodesType(type) {\n        var placeholder = \"Search \";\n        if (type == 'company') {\n            placeholder += 'Companies';\n        } else if (type == 'investor') {\n            placeholder += 'Investors';\n        }\n        this.setState({ placeholder: placeholder });\n    },\n\n    searchKeyword: function searchKeyword(event) {\n        var keywords = event.target.value.toLowerCase();\n\n        clearInterval(this.state.timestamp);\n\n        var results = scopeDispatchEvent(\"search\", keywords, true);\n\n        // TRACKING INFO\n\n        var search_results = [];\n        for (var i in results) {\n            search_results.push(results[i].name);\n        }\n\n        var search_tracking_obj = { keywords: keywords, results: search_results.length };\n\n        nmTrackSearch(search_tracking_obj);\n\n        // SET STATE\n\n        this.setState({ results: results, keywords: keywords });\n    },\n    checkNodeInfo: function checkNodeInfo(event) {\n\n        var type = event.target.getAttribute(\"data-type\");\n        var id = event.target.getAttribute(\"data-id\");\n\n        jQuery('.results-list').hide();\n        jQuery('.table-view').hide();\n        jQuery('.graph-area .graph-header .header-controls').show();\n\n        showAllNodes();\n        showNodeDescription(type, id);\n\n        event.preventDefault();\n    },\n    showPreviousSearch: function showPreviousSearch(e) {\n        showAllNodes();\n        jQuery('.results-list').show();\n    },\n    graphShowResults: function graphShowResults() {\n        var show_in_graph = [];\n        for (var i in this.state.results) {\n            show_in_graph.push(this.state.results[i].type + '_' + this.state.results[i].id);\n        }\n\n        showNodes(show_in_graph);\n    },\n\n    render: function render() {\n        var _this = this;\n\n        var resultsList = \"\";\n\n        if (this.state.keywords != \"\") {\n\n            this.graphShowResults();\n\n            var resultsItems = this.state.results.map(function (itemInfo, index) {\n\n                var name = itemInfo.name.toLowerCase();\n                var keyword_position = name.indexOf(_this.state.keywords);\n                var type = itemInfo.type;\n                var id = itemInfo.id;\n\n                var title_str = React.createElement(\n                    \"span\",\n                    { \"data-type\": type, \"data-id\": id },\n                    itemInfo.name\n                );\n\n                if (keyword_position != -1) {\n                    var first_string = itemInfo.name.substring(0, keyword_position);\n                    var second_string = itemInfo.name.substring(keyword_position, keyword_position + _this.state.keywords.length);\n                    var third_string = itemInfo.name.substring(keyword_position + _this.state.keywords.length, name.length);\n                    title_str = React.createElement(\n                        \"span\",\n                        { \"data-type\": type, \"data-id\": id },\n                        React.createElement(\n                            \"span\",\n                            { \"data-type\": type, \"data-id\": id },\n                            first_string\n                        ),\n                        React.createElement(\n                            \"b\",\n                            { \"data-type\": type, \"data-id\": id },\n                            second_string\n                        ),\n                        React.createElement(\n                            \"span\",\n                            { \"data-type\": type, \"data-id\": id },\n                            third_string\n                        )\n                    );\n                }\n\n                return React.createElement(\n                    \"li\",\n                    { className: \"\", key: index },\n                    React.createElement(\n                        \"a\",\n                        { href: \"#\", \"data-type\": type, \"data-id\": id, onClick: _this.checkNodeInfo, className: itemInfo.type },\n                        title_str\n                    )\n                );\n            });\n            resultsList = React.createElement(\n                \"ul\",\n                { className: \"results-list\" },\n                resultsItems\n            );\n        } else if (this.state.keywords == '') {\n            showAllNodes();\n        }\n\n        return React.createElement(\n            \"div\",\n            { className: \"sidebar-block search-block\" },\n            React.createElement(\n                \"form\",\n                { id: \"search-module\" },\n                React.createElement(\n                    \"div\",\n                    { className: \"input-wrapper\" },\n                    React.createElement(\"input\", { type: \"text\", id: \"search-keywords\", name: \"keyword\", className: \"search-input\", autoComplete: \"off\", placeholder: this.state.placeholder, onChange: this.searchKeyword, onFocus: this.showPreviousSearch }),\n                    resultsList\n                )\n            )\n        );\n    }\n});","var SearchModule = React.createClass({\n    getInitialState: function () {\n        addCallback(\"resetSearch\", this.resetSearch);\n        addCallback(\"updateNodesType\", this.updateNodesType);\n\n        return {\n            keywords    : \"\",\n            timestamp   : new Date().getTime(),\n            placeholder : 'Search Companies'\n        }\n    },\n    resetSearch: function(){\n        jQuery('#search-keywords').val('');\n        this.setState({keywords:\"\"});\n\n        nmTrackEvent('Explore', 'Reset Search');\n    },\n    updateNodesType: function(type){\n        var placeholder = \"Search \";\n        if(type=='company'){\n            placeholder+='Companies';\n        } else if(type=='investor'){\n            placeholder+='Investors';\n        }\n        this.setState({placeholder:placeholder});\n    },\n\n    searchKeyword: function(event){\n        var keywords = event.target.value.toLowerCase();\n\n        clearInterval(this.state.timestamp);\n\n        var results = scopeDispatchEvent(\"search\", keywords, true);\n\n        // TRACKING INFO\n\n        var search_results = [];\n        for(var i in results){\n            search_results.push(results[i].name);\n        }\n\n        var search_tracking_obj = {keywords: keywords, results:search_results.length};\n\n        nmTrackSearch(search_tracking_obj);\n\n        // SET STATE\n\n        this.setState({results:results, keywords:keywords});\n\n\n    },\n    checkNodeInfo: function(event){\n\n        var type = event.target.getAttribute(\"data-type\");\n        var id = event.target.getAttribute(\"data-id\");\n\n\n\n        jQuery('.results-list').hide();\n        jQuery('.table-view').hide();\n        jQuery('.graph-area .graph-header .header-controls').show();\n\n        showAllNodes();\n        showNodeDescription(type, id);\n\n        event.preventDefault();\n    },\n    showPreviousSearch: function(e){\n        showAllNodes();\n        jQuery('.results-list').show();\n    },\n    graphShowResults(){\n        var show_in_graph = [];\n        for(var i in this.state.results){\n            show_in_graph.push(this.state.results[i].type+'_'+this.state.results[i].id);\n        }\n\n        showNodes(show_in_graph);\n    },\n    render: function(){\n\n\n        var resultsList = \"\";\n\n        if( this.state.keywords!=\"\"){\n\n            this.graphShowResults();\n\n            var resultsItems = this.state.results.map((itemInfo, index) => {\n\n\n\n                var name = itemInfo.name.toLowerCase();\n                var keyword_position = name.indexOf(this.state.keywords);\n                var type = itemInfo.type;\n                var id = itemInfo.id;\n\n                var title_str = <span data-type={type} data-id={id}>{itemInfo.name}</span>;\n\n\n                if(keyword_position!=-1){\n                    var first_string = itemInfo.name.substring(0, keyword_position);\n                    var second_string = itemInfo.name.substring(keyword_position, keyword_position+this.state.keywords.length);\n                    var third_string = itemInfo.name.substring(keyword_position+this.state.keywords.length, name.length);\n                    title_str = <span data-type={type} data-id={id}><span data-type={type} data-id={id}>{first_string}</span><b data-type={type} data-id={id}>{second_string}</b><span data-type={type} data-id={id}>{third_string}</span></span>;\n                }\n\n\n                return (\n                    <li className=\"\" key={index} >\n                        <a href=\"#\" data-type={type} data-id={id} onClick={this.checkNodeInfo} className={itemInfo.type}>\n                            {title_str}\n                        </a>\n                    </li>\n                )\n            });\n            resultsList = <ul className=\"results-list\">{resultsItems}</ul>;\n        } else if(this.state.keywords==''){\n            showAllNodes();\n        }\n\n        return <div className=\"sidebar-block search-block\">\n                <form id='search-module'>\n                    <div className=\"input-wrapper\">\n                        <input type=\"text\" id=\"search-keywords\" name=\"keyword\" className=\"search-input\" autoComplete=\"off\" placeholder={this.state.placeholder} onChange={this.searchKeyword} onFocus={this.showPreviousSearch}/>\n                        {resultsList}\n                    </div>\n                </form>\n\n            </div>;\n    }\n});\n","\"use strict\";\n\nvar SortTable = React.createClass({\n    displayName: \"SortTable\",\n\n    getInitialState: function getInitialState() {\n        var statesDef = { currentPage: 1, data: [], titles: [] };\n\n        statesDef.per_page = 30;\n        statesDef.current_page = 1;\n\n        addCallback(\"onTableResponse\", this.onResponse);\n\n        addCallback(\"updateTableView\", this.onUpdateData);\n\n        addCallback(\"paginateTable\", this.paginateTable);\n\n        addCallback(\"search\", this.onSearch);\n\n        statesDef.scope = this.props.scope;\n\n        if (typeof this.props.data != 'undefined') {\n            statesDef = this.analyzeData(this.props.data);\n            statesDef.total_pages = Math.ceil(statesDef.data.length / statesDef.per_page);\n            statesDef.from = (statesDef.current_page - 1) * statesDef.per_page;\n            statesDef.to = statesDef.current_page * statesDef.per_page > statesDef.data.length ? statesDef.data.length : statesDef.current_page * statesDef.per_page;\n        } else {\n            this.onUpdateData({ type: 'company', filtersParam: [] });\n        }\n        return statesDef;\n    },\n    paginateTable: function paginateTable(params) {\n        var jump_to_page = 0;\n        if (typeof params.page != 'undefined') {\n            jump_to_page = params.page;\n        }\n        if (typeof params.delta != 'undefined') {\n            if (this.state.current_page + params.delta < this.state.total_pages && this.state.current_page + params.delta >= 0) {\n                jump_to_page = this.state.current_page + params.delta;\n            }\n        }\n\n        if (jump_to_page != 0) {\n            nmTrackEvent('Explore', 'List View Page', jump_to_page);\n            this.setState({ current_page: jump_to_page });\n        }\n    },\n    onSearch: function onSearch(keywords) {\n        var searchResult = [];\n        var i = this.state.data.length;\n        while (i--) {\n            if (this.state.data[i].nameLowerCase.indexOf(keywords) != -1) {\n                if (searchResult.length < 100) {\n                    searchResult.push(this.state.data[i]);\n                }\n            }\n        }\n        return searchResult;\n    },\n    analyzeData: function analyzeData(res) {\n\n        var titlesArr = [];\n        var dataArr = [];\n\n        dataArr = [];\n\n        var types = [\"company\", \"investor\"];\n\n        for (var type_i in types) {\n\n            var type = types[type_i];\n\n            for (var i in res.graph.nodes[type]) {\n                var ob = res.graph.nodes[type][i];\n                dataArr.push({\n                    name: ob.n,\n                    funding_total: typeof ob.f == 'undefined' ? 0 : ob.f,\n                    id: ob.i,\n                    type: type,\n                    nameLowerCase: ob.n.toLowerCase(),\n                    index: dataArr.length + 1\n                });\n            }\n        }\n        var numberLabel = window.innerWidth < 768 ? '#' : 'Number';\n        nmTrackEvent('Explore', 'List View Page', 1);\n        return {\n            titles: [{ key: 'index', title: numberLabel, sort: 'both' }, { key: 'name', title: \"Name\", sort: 'both' }, { key: 'funding_total', title: \"Number of investments\", sort: 'both' }],\n            data: dataArr,\n            current_page: 1,\n            total_pages: Math.ceil(dataArr.length / this.state.per_page)\n        };\n    },\n    onUpdateData: function onUpdateData(param) {\n\n        jQuery('.nodata-status').removeAttr(\"style\");\n\n        if (typeof param.type != 'undefined' && typeof param.filtersParam != 'undefined') {\n\n            param.filtersParam.type = param.type;\n            param.filtersParam.page = typeof param.currentPage == 'undefined' ? 1 : param.currentPage;\n            param.filtersParam.reviewed_only = typeof param.reviewedOnly == 'undefined' ? false : param.reviewedOnly;\n\n            scope.latestCallParams = param.filtersParam;\n            scope.latestCallType = param.type;\n\n            var call_url = ajaxCall(\"get_data\", param.filtersParam);\n\n            jQuery.ajax({ url: call_url }).done(function (result) {\n                scopeDispatchEvent(\"onTableResponse\", JSON.parse(result));\n            });\n        }\n    },\n    onResponse: function onResponse(result) {\n        scopeDispatchEvent(\"updateResults\", result.info);\n\n        scopeDispatchEvent(\"updatePagination\", result.pagination);\n\n        var newStates = this.analyzeData(result);\n\n        this.setState(newStates);\n\n        if (result.pagination.total == 0) {\n            jQuery('.nodata-status').show();\n\n            nmTrackEvent('Explore', 'No Data Results', JSON.stringify({ params: scope.latestCallParams, type: scope.latestCallType }));\n        }\n\n        jQuery('.preloader-status').hide();\n    },\n    handleClickNode: function handleClickNode(event) {\n        var type = event.target.getAttribute(\"data-type\");\n        var id = event.target.getAttribute(\"data-id\");\n\n        showNodeDescription(type, id);\n\n        hideTableView();\n\n        event.preventDefault();\n    },\n    sortColumn: function sortColumn(event) {\n        var field = event.target.getAttribute(\"data-field\");\n        var sort = \"both\";\n\n        for (var i in this.state.titles) {\n            if (this.state.titles[i].key == field) {\n                if (this.state.titles[i].sort == 'asc') {\n                    this.state.titles[i].sort = 'desc';\n                } else {\n                    this.state.titles[i].sort = 'asc';\n                }\n                sort = this.state.titles[i].sort;\n            } else {\n                this.state.titles[i].sort = 'both';\n            }\n        }\n\n        this.state.data.sort(function (a, b) {\n            var x = a[field];\n            var y = b[field];\n\n            if (typeof x == \"string\") {\n                x = x.toLowerCase();\n            }\n            if (typeof y == \"string\") {\n                y = y.toLowerCase();\n            }\n            if (sort == 'desc') {\n                return x > y ? -1 : x < y ? 1 : 0;\n            }\n            return x < y ? -1 : x > y ? 1 : 0;\n        });\n        this.setState({ data: this.state.data, current_page: 1 });\n    },\n    render: function render() {\n        var _this = this;\n\n        var titlesList = this.state.titles.map(function (dataInfo) {\n            var className = \"th-inner sortable \" + dataInfo.sort;\n            return React.createElement(\n                \"th\",\n                { key: dataInfo.key, \"data-field\": dataInfo.key, tabIndex: \"0\" },\n                React.createElement(\n                    \"div\",\n                    { className: className, \"data-field\": dataInfo.key,\n                        onClick: _this.sortColumn },\n                    dataInfo.title\n                ),\n                React.createElement(\"div\", { className: \"fht-cell\" })\n            );\n        });\n\n        var displaying_data = [];\n\n        var from = (this.state.current_page - 1) * this.state.per_page;\n        var to = this.state.current_page * this.state.per_page > this.state.data.length ? this.state.data.length : this.state.current_page * this.state.per_page;\n\n        for (var i = from; i < to; i++) {\n            displaying_data.push(this.state.data[i]);\n        }\n\n        var rowsList = displaying_data.map(function (dataInfo, index) {\n            return React.createElement(\n                \"tr\",\n                { \"data-index\": index, key: index },\n                React.createElement(\n                    \"td\",\n                    null,\n                    dataInfo.index\n                ),\n                React.createElement(\n                    \"td\",\n                    null,\n                    React.createElement(\n                        \"a\",\n                        { href: \"#\", onClick: _this.handleClickNode, \"data-id\": dataInfo.id, \"data-type\": dataInfo.type,\n                            className: dataInfo.type },\n                        dataInfo.name\n                    )\n                ),\n                React.createElement(\n                    \"td\",\n                    null,\n                    thousandNotation(dataInfo.funding_total)\n                )\n            );\n        });\n\n        scopeDispatchEvent(\"updateTablePagination\", {\n            current_page: this.state.current_page,\n            from: from + 1,\n            to: to,\n            total: this.state.data.length,\n            per_page: this.state.per_page\n        });\n\n        if (isMobile.any() || jQuery(window).width() < 768) {\n            if (this.state.data.length == 0) {\n                jQuery('.table-view').attr(\"style\", 'display: none !important;');\n            } else {\n                jQuery('.table-view').removeAttr('style');\n            }\n        }\n\n        return React.createElement(\n            \"div\",\n            { className: \"bootstrap-table\" },\n            React.createElement(\n                \"div\",\n                { className: \"fixed-table-container\" },\n                React.createElement(\n                    \"div\",\n                    { className: \"fixed-table-body\" },\n                    React.createElement(\n                        \"table\",\n                        { className: \"table table-hover\" },\n                        React.createElement(\n                            \"thead\",\n                            { className: \"thead-inverse\" },\n                            React.createElement(\n                                \"tr\",\n                                null,\n                                titlesList\n                            )\n                        ),\n                        React.createElement(\n                            \"tbody\",\n                            null,\n                            rowsList\n                        )\n                    )\n                )\n            )\n        );\n    }\n});","var SortTable = React.createClass({\n    getInitialState: function () {\n        var statesDef = {currentPage:1, data:[], titles:[]};\n\n        statesDef.per_page = 30;\n        statesDef.current_page = 1;\n\n        addCallback(\"onTableResponse\", this.onResponse);\n\n        addCallback(\"updateTableView\", this.onUpdateData);\n\n        addCallback(\"paginateTable\", this.paginateTable);\n\n        addCallback(\"search\", this.onSearch);\n\n        statesDef.scope = this.props.scope;\n\n        if (typeof this.props.data != 'undefined') {\n            statesDef = this.analyzeData(this.props.data);\n            statesDef.total_pages = Math.ceil(statesDef.data.length / statesDef.per_page);\n            statesDef.from = (statesDef.current_page - 1) * statesDef.per_page;\n            statesDef.to = (statesDef.current_page) * statesDef.per_page > statesDef.data.length ? statesDef.data.length : (statesDef.current_page) * statesDef.per_page;\n        } else {\n            this.onUpdateData({type:'company', filtersParam:[] })\n        }\n        return statesDef;\n    },\n    paginateTable: function(params){\n        var jump_to_page = 0;\n        if(typeof params.page != 'undefined'){\n            jump_to_page = params.page;\n\n\n        }\n        if(typeof params.delta != 'undefined'){\n            if( (this.state.current_page+params.delta)<this.state.total_pages &&  (this.state.current_page+params.delta)>=0 ){\n                jump_to_page = this.state.current_page+params.delta;\n            }\n        }\n\n        if(jump_to_page!=0){\n            nmTrackEvent('Explore', 'List View Page', jump_to_page);\n            this.setState({current_page:jump_to_page});\n        }\n\n    },\n    onSearch: function(keywords){\n        var searchResult = [];\n        var i = this.state.data.length;\n        while ( i-- ) {\n            if(this.state.data[i].nameLowerCase.indexOf(keywords)!=-1){\n                if(searchResult.length<100){\n                    searchResult.push(this.state.data[i]);\n                }\n            }\n        }\n        return searchResult;\n    },\n    analyzeData: function(res){\n\n            var titlesArr = [];\n            var dataArr = [];\n            \n            dataArr = [];\n\n            var types = [\"company\",\"investor\"];\n\n            for (var type_i in types) {\n\n                var type = types[type_i];\n\n                for (var i in res.graph.nodes[type]) {\n                    var ob = res.graph.nodes[type][i];\n                    dataArr.push({\n                        name : ob.n,\n                        funding_total: typeof ob.f == 'undefined' ? 0 : ob.f,\n                        id: ob.i,\n                        type: type,\n                        nameLowerCase: ob.n.toLowerCase(),\n                        index:dataArr.length + 1,\n                    });\n                }\n            }\n            var numberLabel = window.innerWidth<768 ? '#' : 'Number';\n            nmTrackEvent('Explore', 'List View Page', 1);\n            return {\n                titles: [\n                    {key:'index', title:numberLabel, sort:'both'},\n                    {key:'name', title:\"Name\", sort:'both'}, \n                    {key:'funding_total', title:\"Number of investments\", sort:'both'}\n                ],\n                data: dataArr,\n                current_page: 1,\n                total_pages:Math.ceil(dataArr.length / this.state.per_page)\n            };\n\n    },\n    onUpdateData: function(param){\n\n        jQuery('.nodata-status').removeAttr(\"style\");\n\n        if( (typeof param.type !='undefined') && (typeof param.filtersParam!='undefined') ){\n        \n            param.filtersParam.type = param.type;\n            param.filtersParam.page = typeof param.currentPage == 'undefined' ? 1 : param.currentPage;\n            param.filtersParam.reviewed_only = typeof param.reviewedOnly == 'undefined' ? false : param.reviewedOnly;\n\n            scope.latestCallParams = param.filtersParam;\n            scope.latestCallType = param.type;\n\n            var call_url = ajaxCall(\"get_data\", param.filtersParam);\n\n            jQuery.ajax({url:call_url}).done(function( result ) {\n                scopeDispatchEvent(\"onTableResponse\", JSON.parse(result) );\n            });\n        }\n    },\n    onResponse: function(result){\n        scopeDispatchEvent(\"updateResults\", result.info);\n\n        scopeDispatchEvent(\"updatePagination\", result.pagination);\n\n        var newStates = this.analyzeData(result);\n\n        this.setState(newStates);\n\n        if(result.pagination.total==0){\n            jQuery('.nodata-status').show();\n\n            nmTrackEvent('Explore', 'No Data Results', JSON.stringify({params:scope.latestCallParams, type:scope.latestCallType}));\n        }\n\n        jQuery('.preloader-status').hide();\n    },\n    handleClickNode: function(event){\n        var type = event.target.getAttribute(\"data-type\");\n        var id = event.target.getAttribute(\"data-id\");\n\n        showNodeDescription(type, id);\n\n        hideTableView();\n\n        event.preventDefault();\n\n    },\n    sortColumn: function(event){\n        var field = event.target.getAttribute(\"data-field\");\n        var sort = \"both\";\n\n        for(var i in this.state.titles){\n            if(this.state.titles[i].key==field){\n                if(this.state.titles[i].sort=='asc'){\n                    this.state.titles[i].sort = 'desc';\n                } else {\n                    this.state.titles[i].sort = 'asc';\n                }\n                sort = this.state.titles[i].sort;\n            } else {\n                this.state.titles[i].sort = 'both';\n            }\n        }\n\n        this.state.data.sort(function(a, b) {\n            var x = a[field];\n            var y = b[field];\n\n            if (typeof x == \"string\")\n            {\n                x = x.toLowerCase();\n            }\n            if (typeof y == \"string\")\n            {\n                y = y.toLowerCase();\n            }\n            if(sort=='desc'){\n                return ((x > y) ? -1 : ((x < y) ? 1 : 0));\n            }\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        });\n        this.setState({data: this.state.data, current_page:1});\n    },\n    render: function(){\n\n            var titlesList = this.state.titles.map((dataInfo) => {\n                var className = \"th-inner sortable \" + dataInfo.sort;\n                return (\n                    <th key={dataInfo.key} data-field={dataInfo.key} tabIndex=\"0\">\n                        <div className={className} data-field={dataInfo.key}\n                             onClick={this.sortColumn}>{dataInfo.title}</div>\n                        <div className=\"fht-cell\"></div>\n                    </th>\n                )\n            });\n\n\n            var displaying_data = [];\n\n            var from = (this.state.current_page - 1) * this.state.per_page;\n            var to = (this.state.current_page) * this.state.per_page > this.state.data.length ? this.state.data.length : (this.state.current_page) * this.state.per_page;\n\n            for (var i = from; i < to; i++) {\n                displaying_data.push(this.state.data[i]);\n            }\n\n            var rowsList = displaying_data.map((dataInfo, index) => {\n                return (\n                    <tr data-index={index} key={index}>\n                        <td >{dataInfo.index}</td>\n                        <td><a href='#' onClick={this.handleClickNode} data-id={dataInfo.id} data-type={dataInfo.type}\n                               className={dataInfo.type}>{dataInfo.name}</a></td>\n                        <td>{ thousandNotation(dataInfo.funding_total) }</td>\n                    </tr>\n                )\n            });\n\n            scopeDispatchEvent(\"updateTablePagination\", {\n                current_page: this.state.current_page,\n                from: from + 1,\n                to: to,\n                total: this.state.data.length,\n                per_page: this.state.per_page,\n            });\n\n            if(isMobile.any() || jQuery(window).width()<768){\n                if(this.state.data.length==0){\n                    jQuery('.table-view').attr(\"style\", 'display: none !important;');\n                } else {\n                    jQuery('.table-view').removeAttr('style');\n                }\n            }\n\n            return <div className=\"bootstrap-table\">\n                <div className=\"fixed-table-container\">\n                    <div className=\"fixed-table-body\">\n                        <table className=\"table table-hover\">\n                            <thead className=\"thead-inverse\">\n                            <tr>\n                                {titlesList}\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {rowsList}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n\n    }\n});","'use strict';\n\nvar TablePagination = React.createClass({\n    displayName: 'TablePagination',\n\n    getInitialState: function getInitialState() {\n        addCallback(\"updateTablePagination\", this.onUpdateData);\n        var initialState = {};\n        if (typeof this.props.pagination != 'undefined') {\n            this.props.pagination.total_pages = Math.ceil(this.props.pagination.total / this.props.pagination.per_page);\n            initialState = this.props.pagination;\n        }\n\n        return initialState;\n    },\n    onUpdateData: function onUpdateData(params) {\n\n        if (typeof params.total != 'undefined') {\n\n            params.total_pages = Math.ceil(params.total / params.per_page);\n            this.setState(params);\n        }\n    },\n    updatePagination: function updatePagination(e) {\n        scopeDispatchEvent(\"paginateTable\", { delta: 1 });\n        e.preventDefault();\n    },\n    specificPage: function specificPage(number) {\n        scopeDispatchEvent(\"paginateTable\", { page: number });\n    },\n    firstPage: function firstPage(e) {\n        this.specificPage(1);\n        e.preventDefault();\n    },\n    prevPage: function prevPage(e) {\n        scopeDispatchEvent(\"paginateTable\", { delta: -1 });\n        e.preventDefault();\n    },\n    nextPage: function nextPage(e) {\n        scopeDispatchEvent(\"paginateTable\", { delta: 1 });\n        e.preventDefault();\n    },\n    lastPage: function lastPage(e) {\n        this.specificPage(this.state.total_pages);\n        e.preventDefault();\n    },\n    jumpToPage: function jumpToPage(e) {\n        this.specificPage(Number(e.target.getAttribute(\"data-page\")));\n        e.preventDefault();\n    },\n    render: function render() {\n        var _this = this;\n\n        if (typeof this.state.total != 'undefined') {\n            var total_str = thousandNotation(this.state.total);\n            var showing_pages = 2;\n            var pages_number = [];\n\n            var left_side = [];\n            var right_side_calculation = this.state.total_pages - this.state.current_page;\n            var right_side_val = right_side_calculation > showing_pages ? showing_pages : right_side_calculation;\n\n            for (var i = this.state.current_page - 1; i > this.state.current_page - showing_pages * 2; i--) {\n                if ((left_side.length < showing_pages || right_side_val + left_side.length < showing_pages * 2) && i > 0) {\n                    left_side = [i].concat(left_side);\n                }\n            }\n\n            var right_side = [];\n\n            for (var i = this.state.current_page + 1; i <= this.state.current_page + showing_pages * 2; i++) {\n\n                if ((right_side.length < showing_pages || right_side.length + left_side.length < showing_pages * 2) && i <= this.state.total_pages) {\n                    right_side.push(i);\n                }\n            }\n\n            pages_number = left_side.concat([this.state.current_page]);\n            pages_number = pages_number.concat(right_side);\n\n            var rowsList = pages_number.map(function (index) {\n                if (index == _this.state.current_page) {\n                    return React.createElement(\n                        'i',\n                        { key: index },\n                        thousandNotation(index)\n                    );\n                }\n                return React.createElement(\n                    'a',\n                    { key: index, href: '#', 'data-page': index, onClick: _this.jumpToPage },\n                    thousandNotation(index)\n                );\n            });\n\n            var forward_action = \"\";\n            var last_page_action = \"\";\n            var backward_action = \"\";\n            var first_page_action = \"\";\n\n            if (this.state.current_page != this.state.total_pages) {\n                forward_action = React.createElement(\n                    'a',\n                    { href: '#', onClick: this.nextPage },\n                    React.createElement('i', { className: 'fa fa-caret-right', 'aria-hidden': 'true' })\n                );\n                last_page_action = React.createElement(\n                    'a',\n                    { href: '#', onClick: this.lastPage },\n                    React.createElement('i', { className: 'fa fa-forward', 'aria-hidden': 'true' })\n                );\n            }\n            if (this.state.current_page != 1) {\n                backward_action = React.createElement(\n                    'a',\n                    { href: '#', onClick: this.prevPage },\n                    React.createElement('i', { className: 'fa fa-caret-left', 'aria-hidden': 'true' })\n                );\n                first_page_action = React.createElement(\n                    'a',\n                    { href: '#', onClick: this.firstPage },\n                    React.createElement('i', { className: 'fa fa-backward', 'aria-hidden': 'true' })\n                );\n            }\n\n            return React.createElement(\n                'div',\n                { className: 'results-wrapper' },\n                React.createElement(\n                    'span',\n                    null,\n                    'Displaying results ',\n                    thousandNotation(this.state.from),\n                    '-',\n                    thousandNotation(this.state.to),\n                    ' of ',\n                    total_str\n                ),\n                ' | ',\n                React.createElement(\n                    'span',\n                    { className: 'pagination' },\n                    first_page_action,\n                    backward_action,\n                    rowsList,\n                    forward_action,\n                    last_page_action\n                )\n            );\n        } else {\n            return React.createElement('div', null);\n        }\n    }\n});","var TablePagination = React.createClass({\n    getInitialState: function () {\n        addCallback(\"updateTablePagination\", this.onUpdateData);\n        var initialState = {};\n        if (typeof this.props.pagination != 'undefined') {\n            this.props.pagination.total_pages = Math.ceil(this.props.pagination.total / this.props.pagination.per_page);\n            initialState = this.props.pagination;\n        }\n        \n        return initialState;\n    },\n    onUpdateData: function(params){\n        \n        if(typeof params.total != 'undefined'){\n            \n            params.total_pages = Math.ceil(params.total/params.per_page);\n            this.setState(params);\n        }\n    },\n    updatePagination: function(e){\n        scopeDispatchEvent(\"paginateTable\", {delta:1});\n        e.preventDefault();\n    },\n    specificPage: function(number){\n        scopeDispatchEvent(\"paginateTable\", {page:number});\n    },\n    firstPage: function(e){\n        this.specificPage(1);\n        e.preventDefault();\n    },\n    prevPage: function(e){\n        scopeDispatchEvent(\"paginateTable\", {delta:-1});\n        e.preventDefault();\n    },\n    nextPage: function(e){\n        scopeDispatchEvent(\"paginateTable\", {delta:1});\n        e.preventDefault();\n    },\n    lastPage: function(e){\n        this.specificPage(this.state.total_pages);\n        e.preventDefault();\n    },\n    jumpToPage:function(e){\n        this.specificPage(Number(e.target.getAttribute(\"data-page\")));\n        e.preventDefault();\n    },\n    render: function(){\n        if(typeof this.state.total != 'undefined'){\n            var total_str = thousandNotation(this.state.total);\n            var showing_pages = 2;\n            var pages_number = [];\n\n            var left_side = [];\n            var right_side_calculation = (this.state.total_pages-this.state.current_page);\n            var right_side_val = right_side_calculation > showing_pages ? showing_pages : right_side_calculation;\n\n            for(var i=this.state.current_page-1;i>(this.state.current_page-(showing_pages*2));i--){\n                if( (\n                        left_side.length<showing_pages ||\n                        ((right_side_val+left_side.length)<(showing_pages*2))\n                    )\n                    && i>0\n                ){\n                    left_side = [i].concat(left_side);\n                }\n            }\n\n            var right_side = [];\n\n            for(var i=this.state.current_page+1;i<=(this.state.current_page+(showing_pages*2));i++){\n\n                if( (\n                        right_side.length<showing_pages ||\n                        ((right_side.length+left_side.length)<(showing_pages*2))\n                    )\n                    && i<=this.state.total_pages\n\n                ){\n                    right_side.push(i);\n                }\n            }\n\n            pages_number = left_side.concat([this.state.current_page]);\n            pages_number = pages_number.concat(right_side);\n\n\n            var rowsList = pages_number.map((index) => {\n                if(index==this.state.current_page){\n                    return (\n                        <i key={index}>{thousandNotation(index)}</i>\n                    )\n                }\n                    return (\n                        <a key={index} href=\"#\" data-page={index} onClick={this.jumpToPage}>{thousandNotation(index)}</a>\n                    )\n\n            });\n\n            var forward_action = \"\";\n            var last_page_action = \"\";\n            var backward_action = \"\";\n            var first_page_action = \"\";\n\n            if(this.state.current_page!=this.state.total_pages){\n                forward_action = <a href=\"#\" onClick={this.nextPage}><i className=\"fa fa-caret-right\" aria-hidden=\"true\"></i></a>;\n                last_page_action = <a href=\"#\" onClick={this.lastPage}><i className=\"fa fa-forward\" aria-hidden=\"true\"></i></a>;\n            }\n            if(this.state.current_page!=1){\n                backward_action = <a href=\"#\" onClick={this.prevPage}><i className=\"fa fa-caret-left\" aria-hidden=\"true\"></i></a>;\n                first_page_action = <a href=\"#\" onClick={this.firstPage}><i className=\"fa fa-backward\" aria-hidden=\"true\"></i></a>;\n            }\n\n\n\n            return <div className=\"results-wrapper\"><span>\n                Displaying results {thousandNotation(this.state.from)}-{thousandNotation(this.state.to)} of {total_str}\n            </span> | <span className=\"pagination\">\n                {first_page_action}\n\n                {backward_action}\n\n                {rowsList}\n\n                {forward_action}\n\n                {last_page_action}\n            </span></div>\n        } else {\n            return <div></div>;\n        }\n    }\n});","\"use strict\";\n\nvar Tag = React.createClass({\n    displayName: \"Tag\",\n\n    render: function render() {\n        return React.createElement(\n            \"div\",\n            { className: \"tag-item\" },\n            this.props.title,\n            React.createElement(\n                \"a\",\n                { href: \"#\", className: \"remove-item\", onClick: this.props.handleClick },\n                React.createElement(\"img\", { src: scope.image_dir + \"close-icon.svg\", \"data-value\": this.props.title, \"data-name\": this.props.filter_name })\n            )\n        );\n    }\n});","var Tag = React.createClass({\n    render: function(){\n        return <div className=\"tag-item\" >\n            {this.props.title}\n            <a href=\"#\" className=\"remove-item\"  onClick={this.props.handleClick}>\n                <img src={scope.image_dir + \"close-icon.svg\"} data-value={this.props.title} data-name={this.props.filter_name}/>\n            </a>\n        </div>\n    }\n});","'use strict';\n\nvar TagsBlock = React.createClass({\n    displayName: 'TagsBlock',\n\n    render: function render() {\n        var _this = this;\n\n        var already_rendered = {};\n\n        var listItems = this.props.filters.map(function (filterInfo) {\n\n            if (typeof already_rendered[filterInfo.title] == 'undefined') {\n                already_rendered[filterInfo.title] = 0;\n            }\n            already_rendered[filterInfo.title]++;\n\n            return already_rendered[filterInfo.title] == 1 ? filterInfo.selected && !filterInfo.just_title ? React.createElement(Tag, { title: filterInfo.title, filter_name: _this.props.filter_name, key: filterInfo.title, handleClick: _this.props.handleUnselection }) : \"\" : '';\n        });\n        return React.createElement(\n            'div',\n            { className: 'tags-content' },\n            listItems\n        );\n    }\n});","var TagsBlock = React.createClass({\n    render: function(){\n        var already_rendered = {};\n\n        var listItems = this.props.filters.map((filterInfo) => {\n\n            if(typeof already_rendered[filterInfo.title] == 'undefined'){\n                already_rendered[filterInfo.title] = 0;\n            }\n            already_rendered[filterInfo.title]++;\n\n            return (\n                already_rendered[filterInfo.title]==1 ? (filterInfo.selected && !filterInfo.just_title ? <Tag title={filterInfo.title} filter_name={this.props.filter_name} key={filterInfo.title} handleClick={this.props.handleUnselection} /> : \"\") : ''\n            )\n        });\n        return  <div className=\"tags-content\">{listItems}</div>\n    }\n});","'use strict';\n\n/* **************************\n   *** CALLBACKS HANDLING\n   **************************\n*/\n\nfunction scopeDispatchEvent(command, params) {\n    var do_return = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n\n    if (typeof scope.callbacks[command] != 'undefined') {\n        for (var i in scope.callbacks[command]) {\n            var value = scope.callbacks[command][i](params);\n            if (do_return) {\n                return value;\n            }\n        }\n    }\n}\nfunction addCallback(command, callback) {\n    if (typeof scope.callbacks[command] == 'undefined') {\n        scope.callbacks[command] = [];\n    }\n    scope.callbacks[command].push(callback);\n}\n\nfunction showNodeDescription(type, id) {\n    var not_set_slug = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var animate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n    nmTrackEvent('Explore', 'Show right-hand detail view');\n    scopeDispatchEvent(\"checkNodeInfo\", { type: type, id: id });\n    if (typeof s != 'undefined') {\n        if (s != null) {\n            var nodes = s.graph.nodes();\n            var i = nodes.length;\n            while (i--) {\n                var node = nodes[i];\n                if (node.id == type + '_' + id) {\n                    s.zoomToNode(node, 0.05, s.camera, animate);\n\n                    i = 0;\n                    break;\n                }\n            }\n        }\n    }\n    if (!not_set_slug) {\n        window.history.pushState(type + '/' + id, '', ajax_object.root_url + '/explore/' + type + '/' + id);\n    }\n}\nfunction checkSlugNode() {}\n\nfunction closeNodeDetails() {\n\n    if (!jQuery('.node-details').hasClass('collapsed')) {\n        jQuery('.node-details').animate({ right: -500, time: 500 }, function () {\n            jQuery('.node-details').removeAttr('style').addClass(\"collapsed\");\n        });\n    }\n}\nfunction hideTableView() {\n    jQuery('.table-view').fadeOut();\n    jQuery('.graph-area .graph-header .header-controls').fadeIn();\n    nmTrackEvent('Explore', 'Map View');\n}\nfunction showGraphZoom(zoom) {\n    if (s != null) {\n        s.camera.goTo({\n            x: s.camera.x,\n            y: s.camera.y,\n            ratio: zoom\n        });\n\n        s.refresh();\n    }\n}\nfunction showNodes(nodes_ids) {\n\n    if (s != null) {\n        var add_nodes = [];\n        s.graph.edges().forEach(function (edge) {\n            for (var i in nodes_ids) {\n                if (edge.source == nodes_ids[i] || edge.target == nodes_ids[i]) {\n                    add_nodes.push(nodes_ids[i]);\n                }\n            }\n        });\n        var ids_arr = nodes_ids.join(\"___\");\n        s.graph.nodes().forEach(function (node) {\n            node.hidden = ids_arr.indexOf(node.id) == -1;\n        });\n        s.refresh();\n\n        showGraphZoom(2);\n    }\n}\nfunction showAllNodes() {\n    if (s != null) {\n        s.graph.nodes().forEach(function (node) {\n            node.hidden = false;\n        });\n        s.refresh();\n    }\n}\n\n/* **************************\n   *** UTILITIES\n   **************************\n*/\n\nfunction getSlug(string) {\n    return string.toLowerCase().replace(/[^\\w ]+/g, '').replace(/ +/g, '-');\n}\nfunction thousandNotation(number_str) {\n    return Number(number_str).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\nfunction ajaxCall(action, params) {\n    var call_params = [\"per_page=7000\", \"action=\" + action];\n\n    for (var key in params) {\n        call_params.push(key + '=' + params[key]);\n    }\n\n    return ajax_object.ajax_url + \"?\" + call_params.join(\"&\");\n}\nfunction abbrNumberFormat(num) {\n    var num = Number(num);\n    if (num >= 1000000000000) {\n        return (num / 1000000000000).toFixed(1).replace(/\\.0$/, '') + 'T';\n    }\n    if (num >= 1000000000) {\n        return (num / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'B';\n    }\n    if (num >= 1000000) {\n        return (num / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n    }\n    if (num >= 1000) {\n        return (num / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n    }\n    return num;\n}\nfunction getFormattedDate(date_str) {\n    var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"long\";\n\n    var monthNamesAbbr = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    var funded_date = date_str.split('-');\n\n    if (format == 'short') {\n\n        if (Number(funded_date[2]) == 0 && Number(funded_date[1]) == 0 && Number(funded_date[0]) != 0) {\n            return funded_date[0];\n        } else if (Number(funded_date[1]) != 0) {\n            return monthNamesAbbr[Number(funded_date[1]) - 1] + ', ' + funded_date[0];\n        } else {\n            return '-';\n        }\n    }\n    if (Number(funded_date[0]) == 0) {\n        return 'Undisclosed';\n    } else if (Number(funded_date[2]) == 0 && Number(funded_date[1]) == 0) {\n        return funded_date[0];\n    } else if (Number(funded_date[2]) == 0) {\n        return monthNames[Number(funded_date[1]) - 1] + ', ' + funded_date[0];\n    } else {\n        return monthNames[Number(funded_date[1]) - 1] + ' ' + funded_date[2] + ', ' + funded_date[0];\n    }\n}\n/* **************************\n   *** GRAPH PLUGIN HANDLING\n   **************************\n*/\n\nfunction createNodes(type, filtersParam, reviewed_only, page) {\n    if (!isMobile.any()) {\n        filtersParam.type = type;\n        filtersParam.page = page;\n        filtersParam.reviewed_only = reviewed_only;\n        var call_url = ajaxCall(\"get_graph\", filtersParam);\n\n        jQuery('.preloader-status').show();\n\n        renderNodesWithSigma(call_url);\n    }\n}\nvar s = null;\nvar sTimeout = null;\n\nsigma.prototype.zoomToNode = function (node, ratio, camera) {\n    var animation = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n    if (typeof camera == \"undefined\") {\n        camera = this.cameras[0];\n    }\n    if (animation) {\n        scope.camera = {\n            x: camera.x,\n            y: camera.y,\n            ratio: camera.ratio\n        };\n        jQuery(scope.camera).animate({\n            x: node[camera.readPrefix + \"x\"] + 14,\n            y: node[camera.readPrefix + \"y\"] + 5,\n            ratio: ratio\n        }, {\n            duration: 3000,\n            step: function step(now) {\n                camera.goTo({\n                    x: scope.camera.x,\n                    y: scope.camera.y,\n                    ratio: scope.camera.ratio\n                });\n                updateZoomControl(Math.floor(scope.camera.ratio * 100));\n                s.refresh();\n            }\n        });\n    } else {\n        camera.goTo({\n            x: node[camera.readPrefix + \"x\"] + 14,\n            y: node[camera.readPrefix + \"y\"] + 5,\n            ratio: ratio\n        });\n        updateZoomControl(Math.floor(ratio * 100));\n        this.refresh();\n    }\n};\n\nsigma.prototype.resetZoom = function (camera) {\n    if (typeof camera == \"undefined\") {\n        camera = this.cameras[0];\n    }\n    camera.ratio = 1;\n    camera.x = 0;\n    camera.y = 0;\n    this.refresh();\n};\n\nfunction renderNodesWithSigma(call_url) {\n    if (s != null) {\n        clearTimeout(sTimeout);\n\n        setTimeout(function () {\n            s.graph.clear();\n            s.graph.kill();\n            jQuery(\"#mynetwork\").html('');\n        }, 1);\n        //s.graph.kill();\n\n    }\n\n    jQuery.ajax({\n        url: call_url,\n        dataType: 'json'\n    }).done(function (data) {\n\n        s = new sigma({\n            container: \"mynetwork\",\n            settings: {\n                defaultLabelSize: 14,\n                labelSizeRatio: 1,\n                labelThreshold: 6,\n                webglOversamplingRatio: 2,\n                borderSize: 1,\n                minArrowSize: 0,\n                singleHover: true,\n\n                scalingMode: 'outside',\n\n                zoomMax: 4,\n                zoomMin: 0.02,\n\n                minEdgeSize: 0.3,\n                maxEdgeSize: 0.7,\n                edgeHoverSizeRatio: 1,\n                edgeHoverExtremities: false,\n\n                minNodeSize: 1,\n                maxNodeSize: 8,\n\n                nodesPowRatio: 0.5,\n                edgesPowRatio: 0.05,\n\n                animationsTime: 200\n            }\n        });\n\n        sigmaAddNodesToGraph('company', s, data.graph.nodes.company, data.counts.max_edges);\n        sigmaAddNodesToGraph('investor', s, data.graph.nodes.investor, data.counts.max_edges);\n\n        scope.edges = {};\n\n        for (var i in data.graph.edges) {\n            var edge = data.graph.edges[i];\n            var edge_id = edge.s + \"-\" + edge.i + \"-\" + edge.t;\n            if (typeof scope.edges[edge_id] == 'undefined') {\n                s.graph.addEdge({\n                    id: edge_id,\n                    source: 'investor_' + edge.s,\n                    target: 'company_' + edge.t,\n                    color: \"#bbbbbb\"\n\n                });\n                scope.edges[edge_id] = 1;\n            }\n        }\n        s.bind('clickNode', function (event) {\n\n            var id_str = event.data.node.id;\n\n            //s.zoomToNode(event.data.node, 0.05, event.target.camera);\n            if (typeof id_str != 'undefined') {\n                var node_id = id_str.split('_')[1];\n                var type_str = id_str.split('_')[0];\n\n                showNodeDescription(type_str, node_id);\n            }\n        });\n\n        s.startForceAtlas2({\n            linLogMode: false,\n            adjustSizes: false,\n            barnesHutTheta: 0.5,\n            outboundAttractionDistribution: false,\n            iterationsPerRender: 1,\n            barnesHutOptimize: data.graph.edges.length > 150,\n            slowDown: data.graph.edges.length > 1000 ? 10 : data.graph.edges.length > 200 ? 20 : 30,\n            strongGravityMode: false,\n            scalingRatio: data.graph.edges.length < 200 ? 2 : 10,\n            startingIterations: 25,\n            //edgeWeightInfluence : 0 + (data.edges.length < 400 ? 1.2 : 0),\n            worker: true,\n            autoStop: true,\n            background: true,\n\n            gravity: data.graph.edges.length < 200 ? 2 : 6\n        });\n        sTimeout = setTimeout(function () {\n            s.stopForceAtlas2();\n\n            if (typeof node_type != 'undefined' && typeof node_id != 'undefined') {\n                window.history.pushState(node_type + '/' + node_id, '');\n                showNodeDescription(node_type, node_id, true, false);\n            }\n        }, 2000 + 2000 * ((data.graph.nodes.company.length + data.graph.nodes.investor.length) / 7000) + 2000 * data.graph.edges.length / 2000);\n    }).fail(function () {\n        alert('An unkown error ocurred. Please try again later.');\n    }).always(function () {\n        s.cameras[0].goTo({ ratio: 1.8 });\n\n        setTimeout(function () {\n            jQuery('.preloader-status').hide();\n        }, 100);\n    });\n}\n\nfunction sigmaAddNodesToGraph(type, s, nodes, max_edges) {\n    var colors = {\n        \"company\": \"#0e8edf\",\n        \"investor\": \"#4c4c4c\"\n    };\n\n    for (var i in nodes) {\n        var node = nodes[i];\n\n        var ratio = 0;\n\n        if (max_edges && node.e <= max_edges) {\n            ratio = node.e / max_edges;\n        }\n\n        var angle = Math.random() * 2 * Math.PI;\n        var radius = node.e > 0 ? Math.random() : 0.35 + Math.random();\n\n        var nodeData = {\n            id: type + \"_\" + node.i,\n            label: node.n,\n            //x:  (i % step) * 500 / step ,\n            //y:  (i / step) * 500 / step,\n            x: radius * Math.cos(angle),\n            y: radius * Math.sin(angle),\n            color: colors[type],\n            size: 10 + 60 * ratio\n        };\n\n        s.graph.addNode(nodeData);\n    }\n}\n\nvar isMobile = {\n    Android: function Android() {\n        return navigator.userAgent.match(/Android/i) ? true : false;\n    },\n    BlackBerry: function BlackBerry() {\n        return navigator.userAgent.match(/BlackBerry/i) ? true : false;\n    },\n    iOS: function iOS() {\n        return navigator.userAgent.match(/iPhone|iPad|iPod/i) ? true : false;\n    },\n    Windows: function Windows() {\n        return navigator.userAgent.match(/IEMobile/i) ? true : false;\n    },\n    any: function any() {\n        return isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Windows();\n    }\n};\n\nscope.currentSet = scope.data[scope.currentType];\n\nReactDOM.render(React.createElement(\n    'div',\n    null,\n    React.createElement(NodeDescription, { scope: scope }),\n    React.createElement(\n        'div',\n        { id: 'sidebar-controls', className: 'sidebar' },\n        React.createElement(SearchModule, null),\n        React.createElement(FilterTypes, { title: 'Type', scope: scope })\n    ),\n    React.createElement(\n        'div',\n        { className: 'graph-area' },\n        React.createElement(\n            'div',\n            { className: 'graph-header' },\n            React.createElement(\n                'div',\n                { className: 'list-toggle-container header-controls' },\n                React.createElement(\n                    'button',\n                    null,\n                    'View list ',\n                    React.createElement('span', { className: 'icon-list-view' })\n                ),\n                React.createElement(ResultsCaption, { scope: scope })\n            )\n        ),\n        React.createElement(\n            'div',\n            { className: 'table-view' },\n            React.createElement(\n                'div',\n                { className: 'header-controls' },\n                React.createElement(\n                    'button',\n                    null,\n                    'Close list view ',\n                    React.createElement('span', { className: 'icon-close-icon' })\n                ),\n                React.createElement(ResultsCaption, { scope: scope })\n            ),\n            React.createElement(SortTable, { scope: scope }),\n            React.createElement(\n                'div',\n                { className: 'table-footer' },\n                React.createElement(TablePagination, null)\n            )\n        ),\n        React.createElement('div', { id: 'mynetwork' }),\n        React.createElement(\n            'div',\n            { className: 'preloader-status', style: { display: \"block\" } },\n            React.createElement('i', { className: 'fa fa-refresh fa-spin', 'aria-hidden': 'true' }),\n            React.createElement(\n                'span',\n                null,\n                'Processing data'\n            )\n        ),\n        React.createElement(\n            'div',\n            { className: 'nodata-status' },\n            React.createElement('img', { src: scope.image_dir + \"/nodes_map_graph.svg\" }),\n            React.createElement(\n                'div',\n                { className: 'status-wrapper' },\n                React.createElement('span', { className: 'icon-alert-icon' }),\n                React.createElement(\n                    'span',\n                    null,\n                    'No data to show'\n                )\n            )\n        ),\n        React.createElement(\n            'div',\n            { className: 'graph-footer image-block' },\n            React.createElement(\n                'div',\n                { className: 'zoom-control' },\n                React.createElement(\n                    'span',\n                    null,\n                    'zoom 180%'\n                ),\n                React.createElement('div', { id: 'zoom-control', style: { height: 100 } })\n            ),\n            React.createElement(Pagination, null),\n            React.createElement(\n                'div',\n                { className: 'indications-block' },\n                React.createElement(\n                    'div',\n                    { className: 'indications-left' },\n                    React.createElement(\n                        'ul',\n                        null,\n                        React.createElement(\n                            'li',\n                            null,\n                            React.createElement('div', { className: 'round-img company' }),\n                            React.createElement(\n                                'span',\n                                null,\n                                'COMPANY'\n                            )\n                        ),\n                        React.createElement(\n                            'li',\n                            null,\n                            React.createElement('div', { className: 'round-img investor' }),\n                            React.createElement(\n                                'span',\n                                null,\n                                'INVESTOR'\n                            )\n                        ),\n                        React.createElement(\n                            'li',\n                            null,\n                            React.createElement('div', { className: 'round-img grey' }),\n                            React.createElement(\n                                'span',\n                                null,\n                                'INVESTMENT MADE'\n                            )\n                        )\n                    )\n                ),\n                React.createElement(\n                    'div',\n                    { className: 'indications-right' },\n                    React.createElement(\n                        'ul',\n                        null,\n                        React.createElement('li', { className: 'round-img small' }),\n                        React.createElement('li', { className: 'round-img mid' }),\n                        React.createElement('li', { className: 'round-img large' })\n                    ),\n                    React.createElement(\n                        'span',\n                        null,\n                        'PROPORTIONAL TO THE # OF INVESTMENTS'\n                    )\n                )\n            )\n        )\n    )\n), document.getElementById('explore-the-network'));","/* **************************\n   *** CALLBACKS HANDLING\n   **************************\n*/\n\nfunction scopeDispatchEvent(command, params, do_return=false){\n\n    if(typeof scope.callbacks[command]!='undefined'){\n        for(var i in scope.callbacks[command]){\n            var value = scope.callbacks[command][i](params);\n            if(do_return){\n                return value;\n            }\n        }\n    }\n}\nfunction addCallback(command, callback){\n    if(typeof scope.callbacks[command]=='undefined'){\n        scope.callbacks[command] = [];\n    }\n    scope.callbacks[command].push(callback);\n}\n\nfunction showNodeDescription(type, id, not_set_slug=false, animate=true){\n    nmTrackEvent('Explore', 'Show right-hand detail view');\n    scopeDispatchEvent(\"checkNodeInfo\", {type:type, id:id});\n    if(typeof s != 'undefined'){\n        if(s!=null) {\n            var nodes = s.graph.nodes();\n            var i = nodes.length;\n            while(i--){\n                var node = nodes[i];\n                if(node.id==type+'_'+id){\n                    s.zoomToNode(node, 0.05, s.camera, animate);\n\n\n\n                    i=0;\n                    break;\n                }\n            }\n        }\n    }\n    if(!not_set_slug){\n        window.history.pushState(type+'/'+id, '', ajax_object.root_url+'/explore/'+type+'/'+id);\n    }\n\n\n}\nfunction checkSlugNode(){\n\n}\n\nfunction closeNodeDetails(){\n\n\n    if(!jQuery('.node-details').hasClass('collapsed')){\n        jQuery('.node-details').animate({right:-500, time:500}, function(){\n            jQuery('.node-details').removeAttr('style').addClass(\"collapsed\");\n        });\n    }\n}\nfunction hideTableView(){\n    jQuery('.table-view').fadeOut();\n    jQuery('.graph-area .graph-header .header-controls').fadeIn();\n    nmTrackEvent('Explore', 'Map View');\n}\nfunction showGraphZoom(zoom){\n    if(s!=null){\n        s.camera.goTo({\n                x: s.camera.x,\n                y: s.camera.y,\n                ratio : zoom,\n            });\n\n        s.refresh();\n    }\n}\nfunction showNodes(nodes_ids){\n\n    if(s!=null){\n        var add_nodes = [];\n        s.graph.edges().forEach(function(edge){\n            for(var i in nodes_ids){\n                if(edge.source == nodes_ids[i] || edge.target == nodes_ids[i]){\n                    add_nodes.push(nodes_ids[i]);\n                }\n            }\n        });\n        var ids_arr = nodes_ids.join(\"___\");\n        s.graph.nodes().forEach(function(node) {\n            node.hidden = ids_arr.indexOf(node.id)==-1;\n        });\n        s.refresh();\n\n        showGraphZoom(2);\n    }\n}\nfunction showAllNodes(){\n    if(s!=null){\n        s.graph.nodes().forEach(function(node) {\n            node.hidden = false;\n        });\n        s.refresh();\n    }\n}\n\n/* **************************\n   *** UTILITIES\n   **************************\n*/\n\nfunction getSlug(string){\n    return string.toLowerCase().replace(/[^\\w ]+/g,'').replace(/ +/g,'-');\n}\nfunction thousandNotation(number_str){\n    return Number(number_str).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n}\nfunction ajaxCall(action, params){\n    var call_params = [\"per_page=7000\", \"action=\"+action];\n    \n    for(var key in params){\n        call_params.push(key+'='+params[key]);\n    }\n    \n    return ajax_object.ajax_url+\"?\"+call_params.join(\"&\");\n}\nfunction abbrNumberFormat(num) {\n    var num = Number(num);\n    if (num >= 1000000000000) {\n        return (num / 1000000000000).toFixed(1).replace(/\\.0$/, '') + 'T';\n    }\n     if (num >= 1000000000) {\n        return (num / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'B';\n     }\n     if (num >= 1000000) {\n        return (num / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n     }\n     if (num >= 1000) {\n        return (num / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n     }\n     return num;\n}\nfunction getFormattedDate(date_str, format=\"long\"){\n    var monthNamesAbbr = [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]; \n    var monthNames = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ]; \n\n    var funded_date = date_str.split('-');\n\n    if(format=='short'){\n        \n        if(Number(funded_date[2])==0 && Number(funded_date[1])==0 && Number(funded_date[0])!=0){\n            return funded_date[0];\n        } else if(Number(funded_date[1])!=0){\n            return monthNamesAbbr[Number(funded_date[1])-1]+', '+funded_date[0];\n        } else {\n            return '-';\n        }\n    }\n    if(Number(funded_date[0])==0){\n        return 'Undisclosed';\n    } else if(Number(funded_date[2])==0 && Number(funded_date[1])==0){\n        return funded_date[0];\n    } else if(Number(funded_date[2])==0){\n        return monthNames[Number(funded_date[1])-1]+', '+funded_date[0];\n    } else {\n        return monthNames[Number(funded_date[1])-1]+' '+funded_date[2]+', '+funded_date[0];\n    }\n}\n/* **************************\n   *** GRAPH PLUGIN HANDLING\n   **************************\n*/\n\nfunction createNodes(type, filtersParam, reviewed_only, page){\n    if(!isMobile.any()){\n        filtersParam.type = type;\n        filtersParam.page = page;\n        filtersParam.reviewed_only = reviewed_only;\n        var call_url = ajaxCall(\"get_graph\", filtersParam);\n\n        jQuery('.preloader-status').show();\n\n        renderNodesWithSigma(call_url);\n    }\n}\nvar s = null;\nvar sTimeout = null;\n\nsigma.prototype.zoomToNode = function(node, ratio, camera, animation=false){\n    if(typeof camera == \"undefined\"){\n        camera = this.cameras[0];\n    }\n    if(animation){\n        scope.camera = {\n             x: camera.x,\n             y: camera.y,\n             ratio : camera.ratio,\n        };\n        jQuery(scope.camera).animate({\n            x: node[camera.readPrefix+\"x\"]+14,\n            y: node[camera.readPrefix+\"y\"]+5,\n            ratio: ratio\n        }, {\n            duration: 3000,\n            step: function(now) {\n                  camera.goTo({\n                    x: scope.camera.x,\n                    y: scope.camera.y,\n                    ratio : scope.camera.ratio,\n             });\n                updateZoomControl( Math.floor(scope.camera.ratio * 100) );\n            s.refresh();\n            }\n        });\n    } else {\n        camera.goTo({\n                x: node[camera.readPrefix+\"x\"]+14,\n                y: node[camera.readPrefix+\"y\"]+5,\n                ratio : ratio,\n            });\n        updateZoomControl( Math.floor(ratio * 100) );\n        this.refresh();\n    }\n\n}\n\nsigma.prototype.resetZoom = function(camera){\n    if(typeof camera == \"undefined\"){\n        camera = this.cameras[0];\n    }\n    camera.ratio = 1;\n    camera.x = 0;\n    camera.y = 0;\n    this.refresh();\n}\n\nfunction renderNodesWithSigma(call_url) {\n    if (s != null) {\n        clearTimeout(sTimeout);\n\n\n        setTimeout(function(){\n            s.graph.clear();\n            s.graph.kill();\n            jQuery(\"#mynetwork\").html('');\n        },1);\n        //s.graph.kill();\n\n\n\n    }\n\n    jQuery.ajax({\n        url: call_url,\n        dataType: 'json'\n    }).done(function(data) {\n\n\n        s = new sigma({\n            container : \"mynetwork\",\n            settings : {\n                defaultLabelSize : 14,\n                labelSizeRatio: 1,\n                labelThreshold: 6,\n                webglOversamplingRatio: 2,\n                borderSize: 1,\n                minArrowSize: 0,\n                singleHover: true,\n\n                scalingMode: 'outside',\n\n                zoomMax: 4,\n                zoomMin: 0.02,\n\n                minEdgeSize: 0.3,\n                maxEdgeSize: 0.7,\n                edgeHoverSizeRatio: 1,\n                edgeHoverExtremities: false,\n\n\n                minNodeSize: 1,\n                maxNodeSize: 8,\n\n                nodesPowRatio: 0.5,\n                edgesPowRatio: 0.05,\n\n                animationsTime: 200\n            }\n        });\n\n        sigmaAddNodesToGraph('company', s, data.graph.nodes.company, data.counts.max_edges);\n        sigmaAddNodesToGraph('investor', s, data.graph.nodes.investor, data.counts.max_edges);\n\n        scope.edges = {};\n\n        for (var i in data.graph.edges) {\n            var edge = data.graph.edges[i];\n            var edge_id = edge.s + \"-\" + edge.i + \"-\" + edge.t;\n            if(typeof scope.edges[edge_id] == 'undefined'){\n                s.graph.addEdge({\n                    id : edge_id,\n                    source: 'investor_' + edge.s,\n                    target: 'company_' + edge.t,\n                    color : \"#bbbbbb\",\n\n                });\n                scope.edges[edge_id] = 1;\n            }\n        }\n        s.bind('clickNode',function(event){\n\n            var id_str = event.data.node.id;\n\n            //s.zoomToNode(event.data.node, 0.05, event.target.camera);\n            if(typeof id_str !='undefined'){\n                var node_id = id_str.split('_')[1];\n                var type_str = id_str.split('_')[0];\n\n                showNodeDescription(type_str, node_id);\n            }\n\n        });\n\n        s.startForceAtlas2({\n            linLogMode: false,\n            adjustSizes: false,\n            barnesHutTheta: 0.5,\n            outboundAttractionDistribution : false,\n            iterationsPerRender: 1,\n            barnesHutOptimize : data.graph.edges.length > 150,\n            slowDown: data.graph.edges.length > 1000 ? 10 : (data.graph.edges.length > 200 ? 20 : 30 ),\n            strongGravityMode: false,\n            scalingRatio:  data.graph.edges.length < 200 ? 2 : 10 ,\n            startingIterations : 25,\n            //edgeWeightInfluence : 0 + (data.edges.length < 400 ? 1.2 : 0),\n            worker: true,\n            autoStop: true,\n            background: true,\n\n            gravity: data.graph.edges.length < 200 ? 2 : 6\n        });\n        sTimeout = setTimeout(function(){\n            s.stopForceAtlas2();\n\n            if (typeof node_type != 'undefined' && typeof node_id != 'undefined') {\n                window.history.pushState(node_type + '/' + node_id, '');\n                showNodeDescription(node_type, node_id, true, false);\n            }\n\n        },2000 + 2000 * (( data.graph.nodes.company.length + data.graph.nodes.investor.length ) / 7000 ) + 2000 * data.graph.edges.length / 2000);\n\n    }).fail(function(){\n        alert('An unkown error ocurred. Please try again later.');\n    }).always(function() {\n        s.cameras[0].goTo({ratio: 1.8});\n\n        setTimeout(function(){\n            jQuery('.preloader-status').hide();\n\n        }, 100);\n\n\n    });\n}\n\nfunction sigmaAddNodesToGraph( type , s, nodes, max_edges ){\n    var colors = {\n        \"company\" : \"#0e8edf\",\n        \"investor\" : \"#4c4c4c\"\n    }\n\n    for (var i in nodes) {\n        var node = nodes[i];\n\n        var ratio = 0;\n\n        if (max_edges && node.e <= max_edges) {\n            ratio = node.e / max_edges;\n        }\n\n        var angle = Math.random() * 2 * Math.PI;\n        var radius =  node.e > 0 ?  Math.random() : (0.35 + Math.random() ) ;\n\n\n\n        var nodeData = {\n            id: type + \"_\" + node.i,\n            label: node.n,\n            //x:  (i % step) * 500 / step ,\n            //y:  (i / step) * 500 / step,\n            x : radius * Math.cos(angle),\n            y : radius * Math.sin(angle),\n            color: colors[type],\n            size: 10 + (60 * ratio)\n        };\n\n        s.graph.addNode(nodeData);\n\n    }\n}\n\nvar isMobile = {\n    Android: function() {\n        return navigator.userAgent.match(/Android/i) ? true : false;\n    },\n    BlackBerry: function() {\n        return navigator.userAgent.match(/BlackBerry/i) ? true : false;\n    },\n    iOS: function() {\n        return navigator.userAgent.match(/iPhone|iPad|iPod/i) ? true : false;\n    },\n    Windows: function() {\n        return navigator.userAgent.match(/IEMobile/i) ? true : false;\n    },\n    any: function() {\n        return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Windows());\n    }\n};\n\nscope.currentSet = scope.data[scope.currentType];\n\nReactDOM.render(\n    <div>\n        <NodeDescription scope={scope}/>\n\n        <div id=\"sidebar-controls\" className=\"sidebar\">\n            <SearchModule/>\n            <FilterTypes title=\"Type\" scope={scope}/>\n        </div>\n        <div className=\"graph-area\">\n            <div className=\"graph-header\">\n                <div className=\"list-toggle-container header-controls\">\n                    <button>\n                        View list <span className=\"icon-list-view\"></span>\n                    </button>\n                    <ResultsCaption scope={scope}/>\n                </div>\n            </div>\n\n            <div className=\"table-view\">\n\n                <div className=\"header-controls\">\n                    <button>\n                        Close list view <span className=\"icon-close-icon\"></span>\n                    </button>\n                    <ResultsCaption scope={scope}/>\n                </div>\n                <SortTable scope={scope}/>\n                <div className=\"table-footer\">\n                    <TablePagination/>\n                </div>\n\n            </div>\n\n            <div id=\"mynetwork\"></div>\n\n\n            <div className=\"preloader-status\" style={{display:\"block\"}}>\n                <i className=\"fa fa-refresh fa-spin\" aria-hidden=\"true\"></i>\n                <span>Processing data</span>\n            </div>\n            <div className=\"nodata-status\">\n                <img src={scope.image_dir+\"/nodes_map_graph.svg\"} />\n                <div className=\"status-wrapper\">\n                    <span className=\"icon-alert-icon\"></span>\n                    <span>No data to show</span>\n                </div>\n            </div>\n\n            <div className=\"graph-footer image-block\">\n                <div className=\"zoom-control\">\n                    <span>zoom 180%</span>\n                    <div id=\"zoom-control\" style={{height:100}}></div>\n                </div>\n\n                <Pagination/>\n\n                <div className=\"indications-block\">\n                    <div className=\"indications-left\">\n                        <ul>\n                            <li>\n                                <div className=\"round-img company\"></div>\n                                <span>COMPANY</span></li>\n                            <li>\n                                <div className=\"round-img investor\"></div>\n                                <span>INVESTOR</span></li>\n                            <li>\n                                <div className=\"round-img grey\"></div>\n                                <span>INVESTMENT MADE</span></li>\n                        </ul>\n                    </div>\n                    <div className=\"indications-right\">\n                        <ul>\n                            <li className=\"round-img small\"></li>\n                            <li className=\"round-img mid\"></li>\n                            <li className=\"round-img large\"></li>\n                        </ul>\n                        <span>PROPORTIONAL TO THE # OF INVESTMENTS</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </div>\n    , document.getElementById('explore-the-network'));"]}